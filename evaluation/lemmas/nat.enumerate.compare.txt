evaluation/lemmas/nat.enumerate.bpl
  159  number of lemmas
  0  wrong
forall x₀: nat, y₀: nat, y₁: nat :: (mul(x₀, max(y₀, y₁)) == mul(add(x₀, zero), max(y₀, y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (min(x₀, sub(y₀, y₁)) == min(max(x₀, zero), sub(y₀, y₁)))
forall y₀: nat, y₁: nat :: (succ(add(y₀, y₁)) == add(y₀, succ(y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (add(sub(y₀, y₁), x₁) == add(sub(y₀, y₁), min(x₁, x₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (add(mul(y₀, y₁), x₁) == add(mul(y₀, y₁), max(x₁, zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (max(x₀, sub(y₀, y₁)) == max(min(x₀, x₀), sub(y₀, y₁)))
forall y₀: nat, y₁: nat :: (succ(add(y₀, y₁)) == add(max(y₀, y₀), succ(y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (max(x₀, sub(y₀, y₁)) == max(max(x₀, zero), sub(y₀, y₁)))
forall y₀: nat, x₁: nat :: (sub(succ(y₀), x₁) == sub(succ(y₀), max(x₁, zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (sub(x₀, sub(y₀, y₁)) == sub(max(x₀, zero), sub(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (add(add(y₀, y₁), x₁) == add(add(y₀, y₁), max(x₁, zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (mul(x₀, min(y₀, y₁)) == mul(max(x₀, x₀), min(y₀, y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, add(y₀, y₁)) == add(max(y₀, zero), add(x₀, y₁)))
forall x₀: nat, y₀: nat :: (add(x₀, succ(y₀)) == add(max(x₀, zero), succ(y₀)))
forall y₀: nat, y₁: nat, x₁: nat :: (add(max(y₀, y₁), x₁) == add(max(y₀, y₁), add(x₁, zero)))
forall y₀: nat, y₁: nat, x₁: nat :: (add(add(y₀, y₁), x₁) == add(max(x₁, zero), add(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (add(add(y₀, y₁), x₁) == add(add(y₀, x₁), y₁))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, max(y₀, y₁)) == add(max(y₀, y₁), max(x₀, x₀)))
forall y₀: nat, y₁: nat, x₁: nat :: (add(add(y₀, y₁), x₁) == add(add(y₁, y₀), max(x₁, zero)))
forall y₀: nat, x₁: nat :: (succ(add(y₀, x₁)) == add(max(x₁, x₁), succ(y₀)))
forall y₀: nat, y₁: nat, x₁: nat :: (add(min(y₀, y₁), x₁) == add(min(x₁, x₁), min(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (max(max(y₀, y₁), x₁) == max(max(y₀, y₁), max(x₁, x₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (max(x₀, min(y₀, y₁)) == max(max(x₀, x₀), min(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (min(add(y₀, y₁), x₁) == min(add(y₁, y₀), min(x₁, x₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (max(x₀, add(y₀, y₁)) == max(max(x₀, zero), add(y₁, y₀)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, add(y₀, y₁)) == add(min(y₀, y₀), add(x₀, y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, add(y₀, y₁)) == add(add(y₀, y₁), min(x₀, x₀)))
forall y₀: nat, y₁: nat, x₁: nat :: (max(add(y₀, y₁), x₁) == max(add(y₀, y₁), max(x₁, zero)))
forall y₀: nat, y₁: nat, x₁: nat :: (add(max(y₀, y₁), x₁) == add(min(x₁, x₁), max(y₀, y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, add(y₀, y₁)) == add(add(x₀, y₀), y₁))
forall y₀: nat, y₁: nat, x₁: nat :: (min(max(y₀, y₁), x₁) == min(max(y₀, y₁), max(x₁, zero)))
forall y₀: nat, y₁: nat, x₁: nat :: (mul(add(y₀, y₁), x₁) == mul(add(y₁, y₀), max(x₁, zero)))
forall y₀: nat, y₁: nat, x₁: nat :: (max(add(y₀, y₁), x₁) == max(add(y₀, y₁), add(x₁, zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (sub(x₀, min(y₀, y₁)) == sub(max(x₀, zero), min(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (max(min(y₀, y₁), x₁) == max(min(y₀, y₁), add(x₁, zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (sub(x₀, min(y₀, y₁)) == sub(add(x₀, zero), min(y₀, y₁)))
forall x₀: nat, y₀: nat :: (min(x₀, succ(y₀)) == min(max(x₀, zero), succ(y₀)))
forall y₀: nat, y₁: nat, x₁: nat :: (mul(sub(y₀, y₁), x₁) == mul(sub(y₀, y₁), add(x₁, zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (min(x₀, add(y₀, y₁)) == min(max(x₀, zero), add(y₁, y₀)))
forall x₀: nat, y₀: nat, y₁: nat :: (min(x₀, min(y₀, y₁)) == min(add(x₀, zero), min(y₀, y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (max(x₀, sub(y₀, y₁)) == max(max(x₀, x₀), sub(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (min(mul(y₀, y₁), x₁) == min(mul(y₀, y₁), max(x₁, zero)))
forall x₀: nat, y₀: nat :: (max(x₀, succ(y₀)) == max(add(x₀, zero), succ(y₀)))
forall x₀: nat, y₀: nat, y₁: nat :: (min(x₀, add(y₀, y₁)) == min(add(x₀, zero), add(y₀, y₁)))
forall x₀: nat, y₀: nat :: (sub(x₀, succ(y₀)) == sub(add(x₀, zero), succ(y₀)))
forall y₀: nat, y₁: nat, x₁: nat :: (mul(max(y₀, y₁), x₁) == mul(max(y₀, y₁), add(x₁, zero)))
forall y₀: nat, y₁: nat, x₁: nat :: (min(max(y₀, y₁), x₁) == min(max(y₀, y₁), max(x₁, x₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (max(x₀, add(y₀, y₁)) == max(min(x₀, x₀), add(y₁, y₀)))
forall x₀: nat, y₀: nat, y₁: nat :: (mul(x₀, min(y₀, y₁)) == mul(max(x₀, zero), min(y₀, y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (max(x₀, max(y₀, y₁)) == max(min(x₀, x₀), max(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (max(min(y₀, y₁), x₁) == max(min(y₀, y₁), max(x₁, zero)))
forall y₀: nat, x₁: nat :: (add(y₀, x₁) == add(x₁, min(y₀, y₀)))
forall y₀: nat, y₁: nat, x₁: nat :: (max(add(y₀, y₁), x₁) == max(add(y₀, y₁), min(x₁, x₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (mul(x₀, add(y₀, y₁)) == mul(max(x₀, zero), add(y₁, y₀)))
forall y₀: nat, y₁: nat, x₁: nat :: (min(max(y₀, y₁), x₁) == min(max(y₀, y₁), min(x₁, x₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (sub(add(y₀, y₁), x₁) == sub(add(y₀, y₁), max(x₁, zero)))
forall y₀: nat, x₁: nat :: (succ(add(y₀, x₁)) == add(add(x₁, y₀), succ(zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (sub(x₀, add(y₀, y₁)) == sub(max(x₀, zero), add(y₁, y₀)))
forall y₀: nat, y₁: nat, x₁: nat :: (min(sub(y₀, y₁), x₁) == min(sub(y₀, y₁), min(x₁, x₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (max(min(y₀, y₁), x₁) == max(min(y₀, y₁), max(x₁, x₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (sub(x₀, max(y₀, y₁)) == sub(max(x₀, x₀), max(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (sub(min(y₀, y₁), x₁) == sub(min(y₀, y₁), min(x₁, x₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (sub(sub(y₀, y₁), x₁) == sub(sub(y₀, y₁), max(x₁, zero)))
forall y₀: nat, y₁: nat, x₁: nat :: (mul(sub(y₀, y₁), x₁) == mul(sub(y₀, y₁), min(x₁, x₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (sub(max(y₀, y₁), x₁) == sub(max(y₀, y₁), max(x₁, zero)))
forall y₀: nat, y₁: nat, x₁: nat :: (max(max(y₀, y₁), x₁) == max(max(y₀, y₁), min(x₁, x₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (mul(add(y₀, y₁), x₁) == mul(add(y₁, y₀), min(x₁, x₁)))
forall x₀: nat, y₀: nat :: (sub(x₀, succ(y₀)) == sub(max(x₀, zero), succ(y₀)))
forall x₀: nat, y₀: nat, y₁: nat :: (max(x₀, min(y₀, y₁)) == max(min(x₀, x₀), min(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (sub(sub(y₀, y₁), x₁) == sub(sub(y₀, y₁), max(x₁, x₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, min(y₀, y₁)) == min(add(x₀, y₀), add(x₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (min(sub(y₀, y₁), x₁) == min(sub(y₀, y₁), max(x₁, zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (min(x₀, max(y₀, y₁)) == min(max(x₀, zero), max(y₀, y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (max(x₀, max(y₀, y₁)) == max(max(x₀, zero), max(y₀, y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, add(y₀, y₁)) == add(add(x₀, y₀), add(y₁, zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (sub(x₀, mul(y₀, y₁)) == sub(max(x₀, zero), mul(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (mul(max(y₀, y₁), x₁) == mul(max(y₀, y₁), min(x₁, x₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (max(max(y₀, y₁), x₁) == max(max(y₀, y₁), max(x₁, zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (min(x₀, mul(y₀, y₁)) == min(min(x₀, x₀), mul(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (mul(mul(y₀, y₁), x₁) == mul(mul(y₀, y₁), min(x₁, x₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (max(mul(y₀, y₁), x₁) == max(mul(y₀, y₁), max(x₁, zero)))
forall y₀: nat, y₁: nat, x₁: nat :: (mul(sub(y₀, y₁), x₁) == mul(sub(y₀, y₁), max(x₁, zero)))
forall y₀: nat, y₁: nat, x₁: nat :: (sub(sub(y₀, y₁), x₁) == sub(sub(y₀, y₁), min(x₁, x₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (min(x₀, min(y₀, y₁)) == min(min(x₀, x₀), min(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (mul(min(y₀, y₁), x₁) == mul(min(y₀, y₁), min(x₁, x₁)))
forall y₀: nat, y₁: nat :: (succ(mul(y₀, y₁)) == add(mul(y₀, y₁), succ(zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (min(x₀, min(y₀, y₁)) == min(max(x₀, x₀), min(y₀, y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (mul(x₀, max(y₀, y₁)) == mul(max(x₀, zero), max(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (sub(max(y₀, y₁), x₁) == sub(max(y₀, y₁), min(x₁, x₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (add(add(y₀, y₁), x₁) == add(add(y₀, x₁), min(y₁, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (sub(mul(y₀, y₁), x₁) == sub(mul(y₀, y₁), max(x₁, x₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, add(y₀, y₁)) == add(add(x₀, zero), add(y₁, y₀)))
forall y₀: nat, y₁: nat, x₁: nat :: (mul(max(y₀, y₁), x₁) == mul(max(y₀, y₁), max(x₁, zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, add(y₀, y₁)) == add(max(y₀, zero), add(y₁, x₀)))
forall y₀: nat, y₁: nat, x₁: nat :: (sub(add(y₀, y₁), x₁) == sub(add(y₁, y₀), max(x₁, x₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (sub(max(y₀, y₁), x₁) == sub(max(y₀, y₁), max(x₁, x₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (max(x₀, min(y₀, y₁)) == max(max(x₀, zero), min(y₀, y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (min(x₀, mul(y₀, y₁)) == min(max(x₀, zero), mul(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (sub(min(y₀, y₁), x₁) == sub(min(y₀, y₁), max(x₁, x₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (mul(x₀, sub(y₀, y₁)) == mul(max(x₀, zero), sub(y₀, y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (mul(x₀, mul(y₀, y₁)) == mul(min(x₀, x₀), mul(y₀, y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, add(y₀, y₁)) == add(min(y₀, y₀), add(y₁, x₀)))
forall x₀: nat, y₀: nat, y₁: nat :: (max(x₀, mul(y₀, y₁)) == max(max(x₀, zero), mul(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (sub(add(y₀, y₁), x₁) == sub(add(y₁, y₀), min(x₁, x₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (mul(x₀, mul(y₀, y₁)) == mul(max(x₀, zero), mul(y₀, y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, add(y₀, y₁)) == add(add(x₀, y₀), min(y₁, y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, add(y₀, y₁)) == add(add(x₀, zero), add(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (add(add(y₀, y₁), x₁) == add(add(x₁, y₁), add(y₀, zero)))
forall x₀: nat, y₀: nat :: (add(x₀, succ(y₀)) == add(add(x₀, zero), succ(y₀)))
forall y₀: nat, y₁: nat, x₁: nat :: (add(mul(y₀, y₁), x₁) == add(mul(y₀, y₁), min(x₁, x₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (add(add(y₀, y₁), x₁) == add(add(y₀, x₁), add(y₁, zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (min(x₀, min(y₀, y₁)) == min(max(x₀, zero), min(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (min(add(y₀, y₁), x₁) == min(add(y₀, y₁), max(x₁, zero)))
forall y₀: nat, y₁: nat, x₁: nat :: (mul(min(y₀, y₁), x₁) == mul(min(y₀, y₁), max(x₁, zero)))
forall y₀: nat, y₁: nat, x₁: nat :: (min(min(y₀, y₁), x₁) == min(min(y₀, y₁), max(x₁, zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, add(y₀, y₁)) == add(min(x₀, x₀), add(y₀, y₁)))
forall y₀: nat, y₁: nat :: (succ(add(y₀, y₁)) == add(min(y₀, y₀), succ(y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (add(add(y₀, y₁), x₁) == add(min(x₁, x₁), add(y₀, y₁)))
forall x₀: nat, y₀: nat :: (mul(x₀, succ(y₀)) == add(x₀, mul(x₀, y₀)))
forall y₀: nat :: (succ(y₀) == add(y₀, succ(zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (mul(x₀, mul(y₀, y₁)) == mul(max(x₀, x₀), mul(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (mul(sub(y₀, y₁), x₁) == mul(sub(y₀, y₁), max(x₁, x₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, sub(y₀, y₁)) == add(sub(y₀, y₁), add(x₀, zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (min(x₀, sub(y₀, y₁)) == min(max(x₀, x₀), sub(y₀, y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (mul(x₀, add(y₀, y₁)) == mul(max(x₀, zero), add(y₀, y₁)))
forall x₀: nat, y₀: nat :: (add(x₀, succ(y₀)) == add(min(y₀, y₀), succ(x₀)))
forall x₀: nat, y₀: nat, y₁: nat :: (min(x₀, add(y₀, y₁)) == min(max(x₀, zero), add(y₀, y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, add(y₀, y₁)) == add(add(y₀, y₁), add(x₀, zero)))
forall y₀: nat, y₁: nat, x₁: nat :: (add(add(y₀, y₁), x₁) == add(max(y₀, zero), add(x₁, y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, mul(y₀, y₁)) == add(add(x₀, zero), mul(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (add(add(y₀, y₁), x₁) == add(y₁, add(y₀, x₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, add(y₀, y₁)) == add(add(y₀, y₁), max(x₀, zero)))
forall y₀: nat, x₁: nat :: (add(y₀, x₁) == add(y₀, max(x₁, zero)))
forall y₀: nat, y₁: nat, x₁: nat :: (add(sub(y₀, y₁), x₁) == add(sub(y₀, y₁), add(x₁, zero)))
forall y₀: nat, y₁: nat, x₁: nat :: (add(min(y₀, y₁), x₁) == add(min(y₀, y₁), add(x₁, zero)))
forall y₀: nat, y₁: nat :: (add(y₀, y₁) == add(y₁, add(y₀, zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, max(y₀, y₁)) == add(max(x₀, zero), max(y₀, y₁)))
forall x₀: nat, y₀: nat :: (add(x₀, succ(y₀)) == add(add(y₀, zero), succ(x₀)))
forall x₀: nat, y₀: nat, y₁: nat :: (sub(x₀, min(y₀, y₁)) == sub(max(x₀, x₀), min(y₀, y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (sub(x₀, mul(y₀, y₁)) == sub(max(x₀, x₀), mul(y₀, y₁)))
forall x₀: nat, y₀: nat :: (add(x₀, succ(y₀)) == succ(add(x₀, min(y₀, y₀))))
forall y₀: nat, x₁: nat :: (add(x₁, mul(y₀, x₁)) == add(max(x₁, x₁), mul(y₀, max(x₁, x₁))))
forall y₀: nat, x₁: nat :: (add(x₁, mul(y₀, x₁)) == add(max(x₁, zero), mul(y₀, max(x₁, zero))))
forall y₀: nat, x₁: nat :: (add(x₁, mul(y₀, x₁)) == add(add(x₁, zero), mul(y₀, add(x₁, zero))))
forall x₀: nat, y₀: nat :: (add(x₀, succ(y₀)) == succ(add(y₀, max(x₀, zero))))
forall y₀: nat, y₁: nat, x₁: nat :: (mul(add(y₀, y₁), x₁) == mul(add(y₁, y₀), add(x₁, zero)))
forall y₀: nat, x₁: nat :: (max(succ(y₀), x₁) == max(succ(y₀), add(x₁, zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (max(x₀, add(y₀, y₁)) == max(add(x₀, zero), add(y₁, y₀)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, add(y₀, y₁)) == add(min(y₁, y₁), add(x₀, y₀)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, add(y₀, y₁)) == add(y₁, add(y₀, x₀)))
forall x₀: nat, y₀: nat :: (mul(x₀, succ(y₀)) == add(mul(x₀, y₀), max(x₀, zero)))
forall y₀: nat, y₁: nat, x₁: nat :: (min(min(y₀, y₁), x₁) == min(min(y₀, y₁), add(x₁, zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (sub(x₀, sub(y₀, y₁)) == sub(max(x₀, x₀), sub(y₀, y₁)))
forall x₀: nat, y₀: nat :: (add(x₀, succ(y₀)) == add(max(y₀, zero), succ(x₀)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, add(y₀, y₁)) == add(max(y₁, zero), add(y₀, x₀)))
forall y₀: nat, y₁: nat, x₁: nat :: (mul(add(y₀, y₁), x₁) == mul(add(y₀, y₁), add(x₁, zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, add(y₀, y₁)) == add(add(y₁, y₀), max(x₀, x₀)))
forall x₀: nat, y₀: nat, y₁: nat :: (mul(x₀, add(y₀, y₁)) == mul(add(x₀, zero), add(y₀, y₁)))
forall y₀: nat, x₁: nat :: (add(x₁, mul(y₀, x₁)) == add(min(x₁, x₁), mul(y₀, min(x₁, x₁))))
  150  nontrivial
forall x₀: nat, y₀: nat, y₁: nat :: (mul(x₀, max(y₀, y₁)) == mul(add(x₀, zero), max(y₀, y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (min(x₀, sub(y₀, y₁)) == min(max(x₀, zero), sub(y₀, y₁)))
forall y₀: nat, y₁: nat :: (succ(add(y₀, y₁)) == add(y₀, succ(y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (add(sub(y₀, y₁), x₁) == add(sub(y₀, y₁), min(x₁, x₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (add(mul(y₀, y₁), x₁) == add(mul(y₀, y₁), max(x₁, zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (max(x₀, sub(y₀, y₁)) == max(min(x₀, x₀), sub(y₀, y₁)))
forall y₀: nat, y₁: nat :: (succ(add(y₀, y₁)) == add(max(y₀, y₀), succ(y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (max(x₀, sub(y₀, y₁)) == max(max(x₀, zero), sub(y₀, y₁)))
forall y₀: nat, x₁: nat :: (sub(succ(y₀), x₁) == sub(succ(y₀), max(x₁, zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (sub(x₀, sub(y₀, y₁)) == sub(max(x₀, zero), sub(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (add(add(y₀, y₁), x₁) == add(add(y₀, y₁), max(x₁, zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (mul(x₀, min(y₀, y₁)) == mul(max(x₀, x₀), min(y₀, y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, add(y₀, y₁)) == add(max(y₀, zero), add(x₀, y₁)))
forall x₀: nat, y₀: nat :: (add(x₀, succ(y₀)) == add(max(x₀, zero), succ(y₀)))
forall y₀: nat, y₁: nat, x₁: nat :: (add(max(y₀, y₁), x₁) == add(max(y₀, y₁), add(x₁, zero)))
forall y₀: nat, y₁: nat, x₁: nat :: (add(add(y₀, y₁), x₁) == add(max(x₁, zero), add(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (add(add(y₀, y₁), x₁) == add(add(y₀, x₁), y₁))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, max(y₀, y₁)) == add(max(y₀, y₁), max(x₀, x₀)))
forall y₀: nat, y₁: nat, x₁: nat :: (add(add(y₀, y₁), x₁) == add(add(y₁, y₀), max(x₁, zero)))
forall y₀: nat, x₁: nat :: (succ(add(y₀, x₁)) == add(max(x₁, x₁), succ(y₀)))
forall y₀: nat, y₁: nat, x₁: nat :: (add(min(y₀, y₁), x₁) == add(min(x₁, x₁), min(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (max(max(y₀, y₁), x₁) == max(max(y₀, y₁), max(x₁, x₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (max(x₀, min(y₀, y₁)) == max(max(x₀, x₀), min(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (min(add(y₀, y₁), x₁) == min(add(y₁, y₀), min(x₁, x₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (max(x₀, add(y₀, y₁)) == max(max(x₀, zero), add(y₁, y₀)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, add(y₀, y₁)) == add(min(y₀, y₀), add(x₀, y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, add(y₀, y₁)) == add(add(y₀, y₁), min(x₀, x₀)))
forall y₀: nat, y₁: nat, x₁: nat :: (max(add(y₀, y₁), x₁) == max(add(y₀, y₁), max(x₁, zero)))
forall y₀: nat, y₁: nat, x₁: nat :: (add(max(y₀, y₁), x₁) == add(min(x₁, x₁), max(y₀, y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, add(y₀, y₁)) == add(add(x₀, y₀), y₁))
forall y₀: nat, y₁: nat, x₁: nat :: (min(max(y₀, y₁), x₁) == min(max(y₀, y₁), max(x₁, zero)))
forall y₀: nat, y₁: nat, x₁: nat :: (mul(add(y₀, y₁), x₁) == mul(add(y₁, y₀), max(x₁, zero)))
forall y₀: nat, y₁: nat, x₁: nat :: (max(add(y₀, y₁), x₁) == max(add(y₀, y₁), add(x₁, zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (sub(x₀, min(y₀, y₁)) == sub(max(x₀, zero), min(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (max(min(y₀, y₁), x₁) == max(min(y₀, y₁), add(x₁, zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (sub(x₀, min(y₀, y₁)) == sub(add(x₀, zero), min(y₀, y₁)))
forall x₀: nat, y₀: nat :: (min(x₀, succ(y₀)) == min(max(x₀, zero), succ(y₀)))
forall y₀: nat, y₁: nat, x₁: nat :: (mul(sub(y₀, y₁), x₁) == mul(sub(y₀, y₁), add(x₁, zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (min(x₀, add(y₀, y₁)) == min(max(x₀, zero), add(y₁, y₀)))
forall x₀: nat, y₀: nat, y₁: nat :: (min(x₀, min(y₀, y₁)) == min(add(x₀, zero), min(y₀, y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (max(x₀, sub(y₀, y₁)) == max(max(x₀, x₀), sub(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (min(mul(y₀, y₁), x₁) == min(mul(y₀, y₁), max(x₁, zero)))
forall x₀: nat, y₀: nat :: (max(x₀, succ(y₀)) == max(add(x₀, zero), succ(y₀)))
forall x₀: nat, y₀: nat, y₁: nat :: (min(x₀, add(y₀, y₁)) == min(add(x₀, zero), add(y₀, y₁)))
forall x₀: nat, y₀: nat :: (sub(x₀, succ(y₀)) == sub(add(x₀, zero), succ(y₀)))
forall y₀: nat, y₁: nat, x₁: nat :: (mul(max(y₀, y₁), x₁) == mul(max(y₀, y₁), add(x₁, zero)))
forall y₀: nat, y₁: nat, x₁: nat :: (min(max(y₀, y₁), x₁) == min(max(y₀, y₁), max(x₁, x₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (max(x₀, add(y₀, y₁)) == max(min(x₀, x₀), add(y₁, y₀)))
forall x₀: nat, y₀: nat, y₁: nat :: (mul(x₀, min(y₀, y₁)) == mul(max(x₀, zero), min(y₀, y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (max(x₀, max(y₀, y₁)) == max(min(x₀, x₀), max(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (max(min(y₀, y₁), x₁) == max(min(y₀, y₁), max(x₁, zero)))
forall y₀: nat, x₁: nat :: (add(y₀, x₁) == add(x₁, min(y₀, y₀)))
forall y₀: nat, y₁: nat, x₁: nat :: (max(add(y₀, y₁), x₁) == max(add(y₀, y₁), min(x₁, x₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (mul(x₀, add(y₀, y₁)) == mul(max(x₀, zero), add(y₁, y₀)))
forall y₀: nat, y₁: nat, x₁: nat :: (min(max(y₀, y₁), x₁) == min(max(y₀, y₁), min(x₁, x₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (sub(add(y₀, y₁), x₁) == sub(add(y₀, y₁), max(x₁, zero)))
forall y₀: nat, x₁: nat :: (succ(add(y₀, x₁)) == add(add(x₁, y₀), succ(zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (sub(x₀, add(y₀, y₁)) == sub(max(x₀, zero), add(y₁, y₀)))
forall y₀: nat, y₁: nat, x₁: nat :: (min(sub(y₀, y₁), x₁) == min(sub(y₀, y₁), min(x₁, x₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (max(min(y₀, y₁), x₁) == max(min(y₀, y₁), max(x₁, x₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (sub(x₀, max(y₀, y₁)) == sub(max(x₀, x₀), max(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (sub(min(y₀, y₁), x₁) == sub(min(y₀, y₁), min(x₁, x₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (sub(sub(y₀, y₁), x₁) == sub(sub(y₀, y₁), max(x₁, zero)))
forall y₀: nat, y₁: nat, x₁: nat :: (mul(sub(y₀, y₁), x₁) == mul(sub(y₀, y₁), min(x₁, x₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (sub(max(y₀, y₁), x₁) == sub(max(y₀, y₁), max(x₁, zero)))
forall y₀: nat, y₁: nat, x₁: nat :: (max(max(y₀, y₁), x₁) == max(max(y₀, y₁), min(x₁, x₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (mul(add(y₀, y₁), x₁) == mul(add(y₁, y₀), min(x₁, x₁)))
forall x₀: nat, y₀: nat :: (sub(x₀, succ(y₀)) == sub(max(x₀, zero), succ(y₀)))
forall x₀: nat, y₀: nat, y₁: nat :: (max(x₀, min(y₀, y₁)) == max(min(x₀, x₀), min(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (sub(sub(y₀, y₁), x₁) == sub(sub(y₀, y₁), max(x₁, x₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, min(y₀, y₁)) == min(add(x₀, y₀), add(x₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (min(sub(y₀, y₁), x₁) == min(sub(y₀, y₁), max(x₁, zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (min(x₀, max(y₀, y₁)) == min(max(x₀, zero), max(y₀, y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (max(x₀, max(y₀, y₁)) == max(max(x₀, zero), max(y₀, y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, add(y₀, y₁)) == add(add(x₀, y₀), add(y₁, zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (sub(x₀, mul(y₀, y₁)) == sub(max(x₀, zero), mul(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (mul(max(y₀, y₁), x₁) == mul(max(y₀, y₁), min(x₁, x₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (max(max(y₀, y₁), x₁) == max(max(y₀, y₁), max(x₁, zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (min(x₀, mul(y₀, y₁)) == min(min(x₀, x₀), mul(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (mul(mul(y₀, y₁), x₁) == mul(mul(y₀, y₁), min(x₁, x₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (max(mul(y₀, y₁), x₁) == max(mul(y₀, y₁), max(x₁, zero)))
forall y₀: nat, y₁: nat, x₁: nat :: (mul(sub(y₀, y₁), x₁) == mul(sub(y₀, y₁), max(x₁, zero)))
forall y₀: nat, y₁: nat, x₁: nat :: (sub(sub(y₀, y₁), x₁) == sub(sub(y₀, y₁), min(x₁, x₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (min(x₀, min(y₀, y₁)) == min(min(x₀, x₀), min(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (mul(min(y₀, y₁), x₁) == mul(min(y₀, y₁), min(x₁, x₁)))
forall y₀: nat, y₁: nat :: (succ(mul(y₀, y₁)) == add(mul(y₀, y₁), succ(zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (min(x₀, min(y₀, y₁)) == min(max(x₀, x₀), min(y₀, y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (mul(x₀, max(y₀, y₁)) == mul(max(x₀, zero), max(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (sub(max(y₀, y₁), x₁) == sub(max(y₀, y₁), min(x₁, x₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (add(add(y₀, y₁), x₁) == add(add(y₀, x₁), min(y₁, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (sub(mul(y₀, y₁), x₁) == sub(mul(y₀, y₁), max(x₁, x₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, add(y₀, y₁)) == add(add(x₀, zero), add(y₁, y₀)))
forall y₀: nat, y₁: nat, x₁: nat :: (mul(max(y₀, y₁), x₁) == mul(max(y₀, y₁), max(x₁, zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, add(y₀, y₁)) == add(max(y₀, zero), add(y₁, x₀)))
forall y₀: nat, y₁: nat, x₁: nat :: (sub(add(y₀, y₁), x₁) == sub(add(y₁, y₀), max(x₁, x₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (sub(max(y₀, y₁), x₁) == sub(max(y₀, y₁), max(x₁, x₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (max(x₀, min(y₀, y₁)) == max(max(x₀, zero), min(y₀, y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (min(x₀, mul(y₀, y₁)) == min(max(x₀, zero), mul(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (sub(min(y₀, y₁), x₁) == sub(min(y₀, y₁), max(x₁, x₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (mul(x₀, sub(y₀, y₁)) == mul(max(x₀, zero), sub(y₀, y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (mul(x₀, mul(y₀, y₁)) == mul(min(x₀, x₀), mul(y₀, y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, add(y₀, y₁)) == add(min(y₀, y₀), add(y₁, x₀)))
forall x₀: nat, y₀: nat, y₁: nat :: (max(x₀, mul(y₀, y₁)) == max(max(x₀, zero), mul(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (sub(add(y₀, y₁), x₁) == sub(add(y₁, y₀), min(x₁, x₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (mul(x₀, mul(y₀, y₁)) == mul(max(x₀, zero), mul(y₀, y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, add(y₀, y₁)) == add(add(x₀, y₀), min(y₁, y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, add(y₀, y₁)) == add(add(x₀, zero), add(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (add(add(y₀, y₁), x₁) == add(add(x₁, y₁), add(y₀, zero)))
forall x₀: nat, y₀: nat :: (add(x₀, succ(y₀)) == add(add(x₀, zero), succ(y₀)))
forall y₀: nat, y₁: nat, x₁: nat :: (add(mul(y₀, y₁), x₁) == add(mul(y₀, y₁), min(x₁, x₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (add(add(y₀, y₁), x₁) == add(add(y₀, x₁), add(y₁, zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (min(x₀, min(y₀, y₁)) == min(max(x₀, zero), min(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (min(add(y₀, y₁), x₁) == min(add(y₀, y₁), max(x₁, zero)))
forall y₀: nat, y₁: nat, x₁: nat :: (mul(min(y₀, y₁), x₁) == mul(min(y₀, y₁), max(x₁, zero)))
forall y₀: nat, y₁: nat, x₁: nat :: (min(min(y₀, y₁), x₁) == min(min(y₀, y₁), max(x₁, zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, add(y₀, y₁)) == add(min(x₀, x₀), add(y₀, y₁)))
forall y₀: nat, y₁: nat :: (succ(add(y₀, y₁)) == add(min(y₀, y₀), succ(y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (add(add(y₀, y₁), x₁) == add(min(x₁, x₁), add(y₀, y₁)))
forall x₀: nat, y₀: nat :: (mul(x₀, succ(y₀)) == add(x₀, mul(x₀, y₀)))
forall y₀: nat :: (succ(y₀) == add(y₀, succ(zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (mul(x₀, mul(y₀, y₁)) == mul(max(x₀, x₀), mul(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (mul(sub(y₀, y₁), x₁) == mul(sub(y₀, y₁), max(x₁, x₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, sub(y₀, y₁)) == add(sub(y₀, y₁), add(x₀, zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (min(x₀, sub(y₀, y₁)) == min(max(x₀, x₀), sub(y₀, y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (mul(x₀, add(y₀, y₁)) == mul(max(x₀, zero), add(y₀, y₁)))
forall x₀: nat, y₀: nat :: (add(x₀, succ(y₀)) == add(min(y₀, y₀), succ(x₀)))
forall x₀: nat, y₀: nat, y₁: nat :: (min(x₀, add(y₀, y₁)) == min(max(x₀, zero), add(y₀, y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, add(y₀, y₁)) == add(add(y₀, y₁), add(x₀, zero)))
forall y₀: nat, y₁: nat, x₁: nat :: (add(add(y₀, y₁), x₁) == add(max(y₀, zero), add(x₁, y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, mul(y₀, y₁)) == add(add(x₀, zero), mul(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (add(add(y₀, y₁), x₁) == add(y₁, add(y₀, x₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, add(y₀, y₁)) == add(add(y₀, y₁), max(x₀, zero)))
forall y₀: nat, x₁: nat :: (add(y₀, x₁) == add(y₀, max(x₁, zero)))
forall y₀: nat, y₁: nat, x₁: nat :: (add(sub(y₀, y₁), x₁) == add(sub(y₀, y₁), add(x₁, zero)))
forall y₀: nat, y₁: nat, x₁: nat :: (add(min(y₀, y₁), x₁) == add(min(y₀, y₁), add(x₁, zero)))
forall y₀: nat, y₁: nat :: (add(y₀, y₁) == add(y₁, add(y₀, zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, max(y₀, y₁)) == add(max(x₀, zero), max(y₀, y₁)))
forall x₀: nat, y₀: nat :: (add(x₀, succ(y₀)) == add(add(y₀, zero), succ(x₀)))
forall x₀: nat, y₀: nat, y₁: nat :: (sub(x₀, min(y₀, y₁)) == sub(max(x₀, x₀), min(y₀, y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (sub(x₀, mul(y₀, y₁)) == sub(max(x₀, x₀), mul(y₀, y₁)))
forall x₀: nat, y₀: nat :: (add(x₀, succ(y₀)) == succ(add(x₀, min(y₀, y₀))))
forall y₀: nat, x₁: nat :: (add(x₁, mul(y₀, x₁)) == add(max(x₁, x₁), mul(y₀, max(x₁, x₁))))
forall y₀: nat, x₁: nat :: (add(x₁, mul(y₀, x₁)) == add(max(x₁, zero), mul(y₀, max(x₁, zero))))
forall y₀: nat, x₁: nat :: (add(x₁, mul(y₀, x₁)) == add(add(x₁, zero), mul(y₀, add(x₁, zero))))
forall x₀: nat, y₀: nat :: (add(x₀, succ(y₀)) == succ(add(y₀, max(x₀, zero))))
forall y₀: nat, y₁: nat, x₁: nat :: (mul(add(y₀, y₁), x₁) == mul(add(y₁, y₀), add(x₁, zero)))
forall y₀: nat, x₁: nat :: (max(succ(y₀), x₁) == max(succ(y₀), add(x₁, zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (max(x₀, add(y₀, y₁)) == max(add(x₀, zero), add(y₁, y₀)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, add(y₀, y₁)) == add(min(y₁, y₁), add(x₀, y₀)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, add(y₀, y₁)) == add(y₁, add(y₀, x₀)))
forall x₀: nat, y₀: nat :: (mul(x₀, succ(y₀)) == add(mul(x₀, y₀), max(x₀, zero)))
forall y₀: nat, y₁: nat, x₁: nat :: (min(min(y₀, y₁), x₁) == min(min(y₀, y₁), add(x₁, zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (sub(x₀, sub(y₀, y₁)) == sub(max(x₀, x₀), sub(y₀, y₁)))
forall x₀: nat, y₀: nat :: (add(x₀, succ(y₀)) == add(max(y₀, zero), succ(x₀)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, add(y₀, y₁)) == add(max(y₁, zero), add(y₀, x₀)))
forall y₀: nat, y₁: nat, x₁: nat :: (mul(add(y₀, y₁), x₁) == mul(add(y₀, y₁), add(x₁, zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, add(y₀, y₁)) == add(add(y₁, y₀), max(x₀, x₀)))
forall x₀: nat, y₀: nat, y₁: nat :: (mul(x₀, add(y₀, y₁)) == mul(add(x₀, zero), add(y₀, y₁)))
forall y₀: nat, x₁: nat :: (add(x₁, mul(y₀, x₁)) == add(min(x₁, x₁), mul(y₀, min(x₁, x₁))))
  60  reduced greedily
forall x₀: nat, y₀: nat, y₁: nat :: (mul(x₀, max(y₀, y₁)) == mul(add(x₀, zero), max(y₀, y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (min(x₀, sub(y₀, y₁)) == min(max(x₀, zero), sub(y₀, y₁)))
forall y₀: nat, y₁: nat :: (succ(add(y₀, y₁)) == add(y₀, succ(y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (add(sub(y₀, y₁), x₁) == add(sub(y₀, y₁), min(x₁, x₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (add(mul(y₀, y₁), x₁) == add(mul(y₀, y₁), max(x₁, zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (max(x₀, sub(y₀, y₁)) == max(min(x₀, x₀), sub(y₀, y₁)))
forall y₀: nat, y₁: nat :: (succ(add(y₀, y₁)) == add(max(y₀, y₀), succ(y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (max(x₀, sub(y₀, y₁)) == max(max(x₀, zero), sub(y₀, y₁)))
forall y₀: nat, x₁: nat :: (sub(succ(y₀), x₁) == sub(succ(y₀), max(x₁, zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (sub(x₀, sub(y₀, y₁)) == sub(max(x₀, zero), sub(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (add(add(y₀, y₁), x₁) == add(add(y₀, y₁), max(x₁, zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (mul(x₀, min(y₀, y₁)) == mul(max(x₀, x₀), min(y₀, y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, add(y₀, y₁)) == add(max(y₀, zero), add(x₀, y₁)))
forall x₀: nat, y₀: nat :: (add(x₀, succ(y₀)) == add(max(x₀, zero), succ(y₀)))
forall y₀: nat, y₁: nat, x₁: nat :: (add(max(y₀, y₁), x₁) == add(max(y₀, y₁), add(x₁, zero)))
forall y₀: nat, y₁: nat, x₁: nat :: (add(add(y₀, y₁), x₁) == add(max(x₁, zero), add(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (add(add(y₀, y₁), x₁) == add(add(y₀, x₁), y₁))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, max(y₀, y₁)) == add(max(y₀, y₁), max(x₀, x₀)))
forall y₀: nat, y₁: nat, x₁: nat :: (add(add(y₀, y₁), x₁) == add(add(y₁, y₀), max(x₁, zero)))
forall y₀: nat, x₁: nat :: (succ(add(y₀, x₁)) == add(max(x₁, x₁), succ(y₀)))
forall y₀: nat, y₁: nat, x₁: nat :: (add(min(y₀, y₁), x₁) == add(min(x₁, x₁), min(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (max(max(y₀, y₁), x₁) == max(max(y₀, y₁), max(x₁, x₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (max(x₀, min(y₀, y₁)) == max(max(x₀, x₀), min(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (min(add(y₀, y₁), x₁) == min(add(y₁, y₀), min(x₁, x₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (max(x₀, add(y₀, y₁)) == max(max(x₀, zero), add(y₁, y₀)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, add(y₀, y₁)) == add(min(y₀, y₀), add(x₀, y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, add(y₀, y₁)) == add(add(y₀, y₁), min(x₀, x₀)))
forall y₀: nat, y₁: nat, x₁: nat :: (max(add(y₀, y₁), x₁) == max(add(y₀, y₁), max(x₁, zero)))
forall y₀: nat, y₁: nat, x₁: nat :: (add(max(y₀, y₁), x₁) == add(min(x₁, x₁), max(y₀, y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, add(y₀, y₁)) == add(add(x₀, y₀), y₁))
forall y₀: nat, y₁: nat, x₁: nat :: (min(max(y₀, y₁), x₁) == min(max(y₀, y₁), max(x₁, zero)))
forall y₀: nat, y₁: nat, x₁: nat :: (mul(add(y₀, y₁), x₁) == mul(add(y₁, y₀), max(x₁, zero)))
forall y₀: nat, y₁: nat, x₁: nat :: (max(add(y₀, y₁), x₁) == max(add(y₀, y₁), add(x₁, zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (sub(x₀, min(y₀, y₁)) == sub(max(x₀, zero), min(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (max(min(y₀, y₁), x₁) == max(min(y₀, y₁), add(x₁, zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (sub(x₀, min(y₀, y₁)) == sub(add(x₀, zero), min(y₀, y₁)))
forall x₀: nat, y₀: nat :: (min(x₀, succ(y₀)) == min(max(x₀, zero), succ(y₀)))
forall y₀: nat, y₁: nat, x₁: nat :: (mul(sub(y₀, y₁), x₁) == mul(sub(y₀, y₁), add(x₁, zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (min(x₀, add(y₀, y₁)) == min(max(x₀, zero), add(y₁, y₀)))
forall x₀: nat, y₀: nat, y₁: nat :: (min(x₀, min(y₀, y₁)) == min(add(x₀, zero), min(y₀, y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (max(x₀, sub(y₀, y₁)) == max(max(x₀, x₀), sub(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (min(mul(y₀, y₁), x₁) == min(mul(y₀, y₁), max(x₁, zero)))
forall x₀: nat, y₀: nat :: (max(x₀, succ(y₀)) == max(add(x₀, zero), succ(y₀)))
forall x₀: nat, y₀: nat, y₁: nat :: (min(x₀, add(y₀, y₁)) == min(add(x₀, zero), add(y₀, y₁)))
forall x₀: nat, y₀: nat :: (sub(x₀, succ(y₀)) == sub(add(x₀, zero), succ(y₀)))
forall y₀: nat, y₁: nat, x₁: nat :: (mul(max(y₀, y₁), x₁) == mul(max(y₀, y₁), add(x₁, zero)))
forall y₀: nat, y₁: nat, x₁: nat :: (min(max(y₀, y₁), x₁) == min(max(y₀, y₁), max(x₁, x₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (max(x₀, add(y₀, y₁)) == max(min(x₀, x₀), add(y₁, y₀)))
forall x₀: nat, y₀: nat, y₁: nat :: (mul(x₀, min(y₀, y₁)) == mul(max(x₀, zero), min(y₀, y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (max(x₀, max(y₀, y₁)) == max(min(x₀, x₀), max(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (max(min(y₀, y₁), x₁) == max(min(y₀, y₁), max(x₁, zero)))
forall y₀: nat, x₁: nat :: (add(y₀, x₁) == add(x₁, min(y₀, y₀)))
forall y₀: nat, y₁: nat, x₁: nat :: (max(add(y₀, y₁), x₁) == max(add(y₀, y₁), min(x₁, x₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (mul(x₀, add(y₀, y₁)) == mul(max(x₀, zero), add(y₁, y₀)))
forall y₀: nat, y₁: nat, x₁: nat :: (min(max(y₀, y₁), x₁) == min(max(y₀, y₁), min(x₁, x₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (sub(add(y₀, y₁), x₁) == sub(add(y₀, y₁), max(x₁, zero)))
forall y₀: nat, x₁: nat :: (succ(add(y₀, x₁)) == add(add(x₁, y₀), succ(zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (sub(x₀, add(y₀, y₁)) == sub(max(x₀, zero), add(y₁, y₀)))
forall y₀: nat, y₁: nat, x₁: nat :: (min(sub(y₀, y₁), x₁) == min(sub(y₀, y₁), min(x₁, x₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (max(min(y₀, y₁), x₁) == max(min(y₀, y₁), max(x₁, x₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (sub(x₀, max(y₀, y₁)) == sub(max(x₀, x₀), max(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (sub(min(y₀, y₁), x₁) == sub(min(y₀, y₁), min(x₁, x₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (sub(sub(y₀, y₁), x₁) == sub(sub(y₀, y₁), max(x₁, zero)))
forall y₀: nat, y₁: nat, x₁: nat :: (mul(sub(y₀, y₁), x₁) == mul(sub(y₀, y₁), min(x₁, x₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (sub(max(y₀, y₁), x₁) == sub(max(y₀, y₁), max(x₁, zero)))
forall y₀: nat, y₁: nat, x₁: nat :: (max(max(y₀, y₁), x₁) == max(max(y₀, y₁), min(x₁, x₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (mul(add(y₀, y₁), x₁) == mul(add(y₁, y₀), min(x₁, x₁)))
forall x₀: nat, y₀: nat :: (sub(x₀, succ(y₀)) == sub(max(x₀, zero), succ(y₀)))
forall x₀: nat, y₀: nat, y₁: nat :: (max(x₀, min(y₀, y₁)) == max(min(x₀, x₀), min(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (sub(sub(y₀, y₁), x₁) == sub(sub(y₀, y₁), max(x₁, x₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, min(y₀, y₁)) == min(add(x₀, y₀), add(x₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (min(sub(y₀, y₁), x₁) == min(sub(y₀, y₁), max(x₁, zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (min(x₀, max(y₀, y₁)) == min(max(x₀, zero), max(y₀, y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (max(x₀, max(y₀, y₁)) == max(max(x₀, zero), max(y₀, y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, add(y₀, y₁)) == add(add(x₀, y₀), add(y₁, zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (sub(x₀, mul(y₀, y₁)) == sub(max(x₀, zero), mul(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (mul(max(y₀, y₁), x₁) == mul(max(y₀, y₁), min(x₁, x₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (max(max(y₀, y₁), x₁) == max(max(y₀, y₁), max(x₁, zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (min(x₀, mul(y₀, y₁)) == min(min(x₀, x₀), mul(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (mul(mul(y₀, y₁), x₁) == mul(mul(y₀, y₁), min(x₁, x₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (max(mul(y₀, y₁), x₁) == max(mul(y₀, y₁), max(x₁, zero)))
forall y₀: nat, y₁: nat, x₁: nat :: (mul(sub(y₀, y₁), x₁) == mul(sub(y₀, y₁), max(x₁, zero)))
forall y₀: nat, y₁: nat, x₁: nat :: (sub(sub(y₀, y₁), x₁) == sub(sub(y₀, y₁), min(x₁, x₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (min(x₀, min(y₀, y₁)) == min(min(x₀, x₀), min(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (mul(min(y₀, y₁), x₁) == mul(min(y₀, y₁), min(x₁, x₁)))
forall y₀: nat, y₁: nat :: (succ(mul(y₀, y₁)) == add(mul(y₀, y₁), succ(zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (min(x₀, min(y₀, y₁)) == min(max(x₀, x₀), min(y₀, y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (mul(x₀, max(y₀, y₁)) == mul(max(x₀, zero), max(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (sub(max(y₀, y₁), x₁) == sub(max(y₀, y₁), min(x₁, x₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (add(add(y₀, y₁), x₁) == add(add(y₀, x₁), min(y₁, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (sub(mul(y₀, y₁), x₁) == sub(mul(y₀, y₁), max(x₁, x₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, add(y₀, y₁)) == add(add(x₀, zero), add(y₁, y₀)))
forall y₀: nat, y₁: nat, x₁: nat :: (mul(max(y₀, y₁), x₁) == mul(max(y₀, y₁), max(x₁, zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, add(y₀, y₁)) == add(max(y₀, zero), add(y₁, x₀)))
forall y₀: nat, y₁: nat, x₁: nat :: (sub(add(y₀, y₁), x₁) == sub(add(y₁, y₀), max(x₁, x₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (sub(max(y₀, y₁), x₁) == sub(max(y₀, y₁), max(x₁, x₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (max(x₀, min(y₀, y₁)) == max(max(x₀, zero), min(y₀, y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (min(x₀, mul(y₀, y₁)) == min(max(x₀, zero), mul(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (sub(min(y₀, y₁), x₁) == sub(min(y₀, y₁), max(x₁, x₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (mul(x₀, sub(y₀, y₁)) == mul(max(x₀, zero), sub(y₀, y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (mul(x₀, mul(y₀, y₁)) == mul(min(x₀, x₀), mul(y₀, y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, add(y₀, y₁)) == add(min(y₀, y₀), add(y₁, x₀)))
forall x₀: nat, y₀: nat, y₁: nat :: (max(x₀, mul(y₀, y₁)) == max(max(x₀, zero), mul(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (sub(add(y₀, y₁), x₁) == sub(add(y₁, y₀), min(x₁, x₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (mul(x₀, mul(y₀, y₁)) == mul(max(x₀, zero), mul(y₀, y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, add(y₀, y₁)) == add(add(x₀, y₀), min(y₁, y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, add(y₀, y₁)) == add(add(x₀, zero), add(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (add(add(y₀, y₁), x₁) == add(add(x₁, y₁), add(y₀, zero)))
forall x₀: nat, y₀: nat :: (add(x₀, succ(y₀)) == add(add(x₀, zero), succ(y₀)))
forall y₀: nat, y₁: nat, x₁: nat :: (add(mul(y₀, y₁), x₁) == add(mul(y₀, y₁), min(x₁, x₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (add(add(y₀, y₁), x₁) == add(add(y₀, x₁), add(y₁, zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (min(x₀, min(y₀, y₁)) == min(max(x₀, zero), min(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (min(add(y₀, y₁), x₁) == min(add(y₀, y₁), max(x₁, zero)))
forall y₀: nat, y₁: nat, x₁: nat :: (mul(min(y₀, y₁), x₁) == mul(min(y₀, y₁), max(x₁, zero)))
forall y₀: nat, y₁: nat, x₁: nat :: (min(min(y₀, y₁), x₁) == min(min(y₀, y₁), max(x₁, zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, add(y₀, y₁)) == add(min(x₀, x₀), add(y₀, y₁)))
forall y₀: nat, y₁: nat :: (succ(add(y₀, y₁)) == add(min(y₀, y₀), succ(y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (add(add(y₀, y₁), x₁) == add(min(x₁, x₁), add(y₀, y₁)))
forall x₀: nat, y₀: nat :: (mul(x₀, succ(y₀)) == add(x₀, mul(x₀, y₀)))
forall y₀: nat :: (succ(y₀) == add(y₀, succ(zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (mul(x₀, mul(y₀, y₁)) == mul(max(x₀, x₀), mul(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (mul(sub(y₀, y₁), x₁) == mul(sub(y₀, y₁), max(x₁, x₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, sub(y₀, y₁)) == add(sub(y₀, y₁), add(x₀, zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (min(x₀, sub(y₀, y₁)) == min(max(x₀, x₀), sub(y₀, y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (mul(x₀, add(y₀, y₁)) == mul(max(x₀, zero), add(y₀, y₁)))
forall x₀: nat, y₀: nat :: (add(x₀, succ(y₀)) == add(min(y₀, y₀), succ(x₀)))
forall x₀: nat, y₀: nat, y₁: nat :: (min(x₀, add(y₀, y₁)) == min(max(x₀, zero), add(y₀, y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, add(y₀, y₁)) == add(add(y₀, y₁), add(x₀, zero)))
forall y₀: nat, y₁: nat, x₁: nat :: (add(add(y₀, y₁), x₁) == add(max(y₀, zero), add(x₁, y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, mul(y₀, y₁)) == add(add(x₀, zero), mul(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (add(add(y₀, y₁), x₁) == add(y₁, add(y₀, x₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, add(y₀, y₁)) == add(add(y₀, y₁), max(x₀, zero)))
forall y₀: nat, x₁: nat :: (add(y₀, x₁) == add(y₀, max(x₁, zero)))
forall y₀: nat, y₁: nat, x₁: nat :: (add(sub(y₀, y₁), x₁) == add(sub(y₀, y₁), add(x₁, zero)))
forall y₀: nat, y₁: nat, x₁: nat :: (add(min(y₀, y₁), x₁) == add(min(y₀, y₁), add(x₁, zero)))
forall y₀: nat, y₁: nat :: (add(y₀, y₁) == add(y₁, add(y₀, zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, max(y₀, y₁)) == add(max(x₀, zero), max(y₀, y₁)))
forall x₀: nat, y₀: nat :: (add(x₀, succ(y₀)) == add(add(y₀, zero), succ(x₀)))
forall x₀: nat, y₀: nat, y₁: nat :: (sub(x₀, min(y₀, y₁)) == sub(max(x₀, x₀), min(y₀, y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (sub(x₀, mul(y₀, y₁)) == sub(max(x₀, x₀), mul(y₀, y₁)))
forall x₀: nat, y₀: nat :: (add(x₀, succ(y₀)) == succ(add(x₀, min(y₀, y₀))))
forall y₀: nat, x₁: nat :: (add(x₁, mul(y₀, x₁)) == add(max(x₁, x₁), mul(y₀, max(x₁, x₁))))
forall y₀: nat, x₁: nat :: (add(x₁, mul(y₀, x₁)) == add(max(x₁, zero), mul(y₀, max(x₁, zero))))
forall y₀: nat, x₁: nat :: (add(x₁, mul(y₀, x₁)) == add(add(x₁, zero), mul(y₀, add(x₁, zero))))
forall x₀: nat, y₀: nat :: (add(x₀, succ(y₀)) == succ(add(y₀, max(x₀, zero))))
forall y₀: nat, y₁: nat, x₁: nat :: (mul(add(y₀, y₁), x₁) == mul(add(y₁, y₀), add(x₁, zero)))
forall y₀: nat, x₁: nat :: (max(succ(y₀), x₁) == max(succ(y₀), add(x₁, zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (max(x₀, add(y₀, y₁)) == max(add(x₀, zero), add(y₁, y₀)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, add(y₀, y₁)) == add(min(y₁, y₁), add(x₀, y₀)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, add(y₀, y₁)) == add(y₁, add(y₀, x₀)))
forall x₀: nat, y₀: nat :: (mul(x₀, succ(y₀)) == add(mul(x₀, y₀), max(x₀, zero)))
forall y₀: nat, y₁: nat, x₁: nat :: (min(min(y₀, y₁), x₁) == min(min(y₀, y₁), add(x₁, zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (sub(x₀, sub(y₀, y₁)) == sub(max(x₀, x₀), sub(y₀, y₁)))
forall x₀: nat, y₀: nat :: (add(x₀, succ(y₀)) == add(max(y₀, zero), succ(x₀)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, add(y₀, y₁)) == add(max(y₁, zero), add(y₀, x₀)))
forall y₀: nat, y₁: nat, x₁: nat :: (mul(add(y₀, y₁), x₁) == mul(add(y₀, y₁), add(x₁, zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, add(y₀, y₁)) == add(add(y₁, y₀), max(x₀, x₀)))
forall x₀: nat, y₀: nat, y₁: nat :: (mul(x₀, add(y₀, y₁)) == mul(add(x₀, zero), add(y₀, y₁)))
forall y₀: nat, x₁: nat :: (add(x₁, mul(y₀, x₁)) == add(min(x₁, x₁), mul(y₀, min(x₁, x₁))))
  47  independent
forall x₀: nat, y₀: nat, y₁: nat :: (mul(x₀, max(y₀, y₁)) == mul(add(x₀, zero), max(y₀, y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (min(x₀, sub(y₀, y₁)) == min(max(x₀, zero), sub(y₀, y₁)))
forall y₀: nat, y₁: nat :: (succ(add(y₀, y₁)) == add(y₀, succ(y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (add(sub(y₀, y₁), x₁) == add(sub(y₀, y₁), min(x₁, x₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (add(mul(y₀, y₁), x₁) == add(mul(y₀, y₁), max(x₁, zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (max(x₀, sub(y₀, y₁)) == max(min(x₀, x₀), sub(y₀, y₁)))
forall y₀: nat, y₁: nat :: (succ(add(y₀, y₁)) == add(max(y₀, y₀), succ(y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (max(x₀, sub(y₀, y₁)) == max(max(x₀, zero), sub(y₀, y₁)))
forall y₀: nat, x₁: nat :: (sub(succ(y₀), x₁) == sub(succ(y₀), max(x₁, zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (sub(x₀, sub(y₀, y₁)) == sub(max(x₀, zero), sub(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (add(add(y₀, y₁), x₁) == add(add(y₀, y₁), max(x₁, zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (mul(x₀, min(y₀, y₁)) == mul(max(x₀, x₀), min(y₀, y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, add(y₀, y₁)) == add(max(y₀, zero), add(x₀, y₁)))
forall x₀: nat, y₀: nat :: (add(x₀, succ(y₀)) == add(max(x₀, zero), succ(y₀)))
forall y₀: nat, y₁: nat, x₁: nat :: (add(max(y₀, y₁), x₁) == add(max(y₀, y₁), add(x₁, zero)))
forall y₀: nat, y₁: nat, x₁: nat :: (add(add(y₀, y₁), x₁) == add(max(x₁, zero), add(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (add(add(y₀, y₁), x₁) == add(add(y₀, x₁), y₁))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, max(y₀, y₁)) == add(max(y₀, y₁), max(x₀, x₀)))
forall y₀: nat, y₁: nat, x₁: nat :: (add(add(y₀, y₁), x₁) == add(add(y₁, y₀), max(x₁, zero)))
forall y₀: nat, x₁: nat :: (succ(add(y₀, x₁)) == add(max(x₁, x₁), succ(y₀)))
forall y₀: nat, y₁: nat, x₁: nat :: (add(min(y₀, y₁), x₁) == add(min(x₁, x₁), min(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (max(max(y₀, y₁), x₁) == max(max(y₀, y₁), max(x₁, x₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (max(x₀, min(y₀, y₁)) == max(max(x₀, x₀), min(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (min(add(y₀, y₁), x₁) == min(add(y₁, y₀), min(x₁, x₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (max(x₀, add(y₀, y₁)) == max(max(x₀, zero), add(y₁, y₀)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, add(y₀, y₁)) == add(min(y₀, y₀), add(x₀, y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, add(y₀, y₁)) == add(add(y₀, y₁), min(x₀, x₀)))
forall y₀: nat, y₁: nat, x₁: nat :: (max(add(y₀, y₁), x₁) == max(add(y₀, y₁), max(x₁, zero)))
forall y₀: nat, y₁: nat, x₁: nat :: (add(max(y₀, y₁), x₁) == add(min(x₁, x₁), max(y₀, y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, add(y₀, y₁)) == add(add(x₀, y₀), y₁))
forall y₀: nat, y₁: nat, x₁: nat :: (min(max(y₀, y₁), x₁) == min(max(y₀, y₁), max(x₁, zero)))
forall y₀: nat, y₁: nat, x₁: nat :: (mul(add(y₀, y₁), x₁) == mul(add(y₁, y₀), max(x₁, zero)))
forall y₀: nat, y₁: nat, x₁: nat :: (max(add(y₀, y₁), x₁) == max(add(y₀, y₁), add(x₁, zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (sub(x₀, min(y₀, y₁)) == sub(max(x₀, zero), min(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (max(min(y₀, y₁), x₁) == max(min(y₀, y₁), add(x₁, zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (sub(x₀, min(y₀, y₁)) == sub(add(x₀, zero), min(y₀, y₁)))
forall x₀: nat, y₀: nat :: (min(x₀, succ(y₀)) == min(max(x₀, zero), succ(y₀)))
forall y₀: nat, y₁: nat, x₁: nat :: (mul(sub(y₀, y₁), x₁) == mul(sub(y₀, y₁), add(x₁, zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (min(x₀, add(y₀, y₁)) == min(max(x₀, zero), add(y₁, y₀)))
forall x₀: nat, y₀: nat, y₁: nat :: (min(x₀, min(y₀, y₁)) == min(add(x₀, zero), min(y₀, y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (max(x₀, sub(y₀, y₁)) == max(max(x₀, x₀), sub(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (min(mul(y₀, y₁), x₁) == min(mul(y₀, y₁), max(x₁, zero)))
forall x₀: nat, y₀: nat :: (max(x₀, succ(y₀)) == max(add(x₀, zero), succ(y₀)))
forall x₀: nat, y₀: nat, y₁: nat :: (min(x₀, add(y₀, y₁)) == min(add(x₀, zero), add(y₀, y₁)))
forall x₀: nat, y₀: nat :: (sub(x₀, succ(y₀)) == sub(add(x₀, zero), succ(y₀)))
forall y₀: nat, y₁: nat, x₁: nat :: (mul(max(y₀, y₁), x₁) == mul(max(y₀, y₁), add(x₁, zero)))
forall y₀: nat, y₁: nat, x₁: nat :: (min(max(y₀, y₁), x₁) == min(max(y₀, y₁), max(x₁, x₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (max(x₀, add(y₀, y₁)) == max(min(x₀, x₀), add(y₁, y₀)))
forall x₀: nat, y₀: nat, y₁: nat :: (mul(x₀, min(y₀, y₁)) == mul(max(x₀, zero), min(y₀, y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (max(x₀, max(y₀, y₁)) == max(min(x₀, x₀), max(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (max(min(y₀, y₁), x₁) == max(min(y₀, y₁), max(x₁, zero)))
forall y₀: nat, x₁: nat :: (add(y₀, x₁) == add(x₁, min(y₀, y₀)))
forall y₀: nat, y₁: nat, x₁: nat :: (max(add(y₀, y₁), x₁) == max(add(y₀, y₁), min(x₁, x₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (mul(x₀, add(y₀, y₁)) == mul(max(x₀, zero), add(y₁, y₀)))
forall y₀: nat, y₁: nat, x₁: nat :: (min(max(y₀, y₁), x₁) == min(max(y₀, y₁), min(x₁, x₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (sub(add(y₀, y₁), x₁) == sub(add(y₀, y₁), max(x₁, zero)))
forall y₀: nat, x₁: nat :: (succ(add(y₀, x₁)) == add(add(x₁, y₀), succ(zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (sub(x₀, add(y₀, y₁)) == sub(max(x₀, zero), add(y₁, y₀)))
forall y₀: nat, y₁: nat, x₁: nat :: (min(sub(y₀, y₁), x₁) == min(sub(y₀, y₁), min(x₁, x₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (max(min(y₀, y₁), x₁) == max(min(y₀, y₁), max(x₁, x₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (sub(x₀, max(y₀, y₁)) == sub(max(x₀, x₀), max(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (sub(min(y₀, y₁), x₁) == sub(min(y₀, y₁), min(x₁, x₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (sub(sub(y₀, y₁), x₁) == sub(sub(y₀, y₁), max(x₁, zero)))
forall y₀: nat, y₁: nat, x₁: nat :: (mul(sub(y₀, y₁), x₁) == mul(sub(y₀, y₁), min(x₁, x₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (sub(max(y₀, y₁), x₁) == sub(max(y₀, y₁), max(x₁, zero)))
forall y₀: nat, y₁: nat, x₁: nat :: (max(max(y₀, y₁), x₁) == max(max(y₀, y₁), min(x₁, x₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (mul(add(y₀, y₁), x₁) == mul(add(y₁, y₀), min(x₁, x₁)))
forall x₀: nat, y₀: nat :: (sub(x₀, succ(y₀)) == sub(max(x₀, zero), succ(y₀)))
forall x₀: nat, y₀: nat, y₁: nat :: (max(x₀, min(y₀, y₁)) == max(min(x₀, x₀), min(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (sub(sub(y₀, y₁), x₁) == sub(sub(y₀, y₁), max(x₁, x₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, min(y₀, y₁)) == min(add(x₀, y₀), add(x₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (min(sub(y₀, y₁), x₁) == min(sub(y₀, y₁), max(x₁, zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (min(x₀, max(y₀, y₁)) == min(max(x₀, zero), max(y₀, y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (max(x₀, max(y₀, y₁)) == max(max(x₀, zero), max(y₀, y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, add(y₀, y₁)) == add(add(x₀, y₀), add(y₁, zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (sub(x₀, mul(y₀, y₁)) == sub(max(x₀, zero), mul(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (mul(max(y₀, y₁), x₁) == mul(max(y₀, y₁), min(x₁, x₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (max(max(y₀, y₁), x₁) == max(max(y₀, y₁), max(x₁, zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (min(x₀, mul(y₀, y₁)) == min(min(x₀, x₀), mul(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (mul(mul(y₀, y₁), x₁) == mul(mul(y₀, y₁), min(x₁, x₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (max(mul(y₀, y₁), x₁) == max(mul(y₀, y₁), max(x₁, zero)))
forall y₀: nat, y₁: nat, x₁: nat :: (mul(sub(y₀, y₁), x₁) == mul(sub(y₀, y₁), max(x₁, zero)))
forall y₀: nat, y₁: nat, x₁: nat :: (sub(sub(y₀, y₁), x₁) == sub(sub(y₀, y₁), min(x₁, x₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (min(x₀, min(y₀, y₁)) == min(min(x₀, x₀), min(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (mul(min(y₀, y₁), x₁) == mul(min(y₀, y₁), min(x₁, x₁)))
forall y₀: nat, y₁: nat :: (succ(mul(y₀, y₁)) == add(mul(y₀, y₁), succ(zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (min(x₀, min(y₀, y₁)) == min(max(x₀, x₀), min(y₀, y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (mul(x₀, max(y₀, y₁)) == mul(max(x₀, zero), max(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (sub(max(y₀, y₁), x₁) == sub(max(y₀, y₁), min(x₁, x₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (add(add(y₀, y₁), x₁) == add(add(y₀, x₁), min(y₁, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (sub(mul(y₀, y₁), x₁) == sub(mul(y₀, y₁), max(x₁, x₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, add(y₀, y₁)) == add(add(x₀, zero), add(y₁, y₀)))
forall y₀: nat, y₁: nat, x₁: nat :: (mul(max(y₀, y₁), x₁) == mul(max(y₀, y₁), max(x₁, zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, add(y₀, y₁)) == add(max(y₀, zero), add(y₁, x₀)))
forall y₀: nat, y₁: nat, x₁: nat :: (sub(add(y₀, y₁), x₁) == sub(add(y₁, y₀), max(x₁, x₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (sub(max(y₀, y₁), x₁) == sub(max(y₀, y₁), max(x₁, x₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (max(x₀, min(y₀, y₁)) == max(max(x₀, zero), min(y₀, y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (min(x₀, mul(y₀, y₁)) == min(max(x₀, zero), mul(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (sub(min(y₀, y₁), x₁) == sub(min(y₀, y₁), max(x₁, x₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (mul(x₀, sub(y₀, y₁)) == mul(max(x₀, zero), sub(y₀, y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (mul(x₀, mul(y₀, y₁)) == mul(min(x₀, x₀), mul(y₀, y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, add(y₀, y₁)) == add(min(y₀, y₀), add(y₁, x₀)))
forall x₀: nat, y₀: nat, y₁: nat :: (max(x₀, mul(y₀, y₁)) == max(max(x₀, zero), mul(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (sub(add(y₀, y₁), x₁) == sub(add(y₁, y₀), min(x₁, x₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (mul(x₀, mul(y₀, y₁)) == mul(max(x₀, zero), mul(y₀, y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, add(y₀, y₁)) == add(add(x₀, y₀), min(y₁, y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, add(y₀, y₁)) == add(add(x₀, zero), add(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (add(add(y₀, y₁), x₁) == add(add(x₁, y₁), add(y₀, zero)))
forall x₀: nat, y₀: nat :: (add(x₀, succ(y₀)) == add(add(x₀, zero), succ(y₀)))
forall y₀: nat, y₁: nat, x₁: nat :: (add(mul(y₀, y₁), x₁) == add(mul(y₀, y₁), min(x₁, x₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (add(add(y₀, y₁), x₁) == add(add(y₀, x₁), add(y₁, zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (min(x₀, min(y₀, y₁)) == min(max(x₀, zero), min(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (min(add(y₀, y₁), x₁) == min(add(y₀, y₁), max(x₁, zero)))
forall y₀: nat, y₁: nat, x₁: nat :: (mul(min(y₀, y₁), x₁) == mul(min(y₀, y₁), max(x₁, zero)))
forall y₀: nat, y₁: nat, x₁: nat :: (min(min(y₀, y₁), x₁) == min(min(y₀, y₁), max(x₁, zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, add(y₀, y₁)) == add(min(x₀, x₀), add(y₀, y₁)))
forall y₀: nat, y₁: nat :: (succ(add(y₀, y₁)) == add(min(y₀, y₀), succ(y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (add(add(y₀, y₁), x₁) == add(min(x₁, x₁), add(y₀, y₁)))
forall x₀: nat, y₀: nat :: (mul(x₀, succ(y₀)) == add(x₀, mul(x₀, y₀)))
forall y₀: nat :: (succ(y₀) == add(y₀, succ(zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (mul(x₀, mul(y₀, y₁)) == mul(max(x₀, x₀), mul(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (mul(sub(y₀, y₁), x₁) == mul(sub(y₀, y₁), max(x₁, x₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, sub(y₀, y₁)) == add(sub(y₀, y₁), add(x₀, zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (min(x₀, sub(y₀, y₁)) == min(max(x₀, x₀), sub(y₀, y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (mul(x₀, add(y₀, y₁)) == mul(max(x₀, zero), add(y₀, y₁)))
forall x₀: nat, y₀: nat :: (add(x₀, succ(y₀)) == add(min(y₀, y₀), succ(x₀)))
forall x₀: nat, y₀: nat, y₁: nat :: (min(x₀, add(y₀, y₁)) == min(max(x₀, zero), add(y₀, y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, add(y₀, y₁)) == add(add(y₀, y₁), add(x₀, zero)))
forall y₀: nat, y₁: nat, x₁: nat :: (add(add(y₀, y₁), x₁) == add(max(y₀, zero), add(x₁, y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, mul(y₀, y₁)) == add(add(x₀, zero), mul(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (add(add(y₀, y₁), x₁) == add(y₁, add(y₀, x₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, add(y₀, y₁)) == add(add(y₀, y₁), max(x₀, zero)))
forall y₀: nat, x₁: nat :: (add(y₀, x₁) == add(y₀, max(x₁, zero)))
forall y₀: nat, y₁: nat, x₁: nat :: (add(sub(y₀, y₁), x₁) == add(sub(y₀, y₁), add(x₁, zero)))
forall y₀: nat, y₁: nat, x₁: nat :: (add(min(y₀, y₁), x₁) == add(min(y₀, y₁), add(x₁, zero)))
forall y₀: nat, y₁: nat :: (add(y₀, y₁) == add(y₁, add(y₀, zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, max(y₀, y₁)) == add(max(x₀, zero), max(y₀, y₁)))
forall x₀: nat, y₀: nat :: (add(x₀, succ(y₀)) == add(add(y₀, zero), succ(x₀)))
forall x₀: nat, y₀: nat, y₁: nat :: (sub(x₀, min(y₀, y₁)) == sub(max(x₀, x₀), min(y₀, y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (sub(x₀, mul(y₀, y₁)) == sub(max(x₀, x₀), mul(y₀, y₁)))
forall x₀: nat, y₀: nat :: (add(x₀, succ(y₀)) == succ(add(x₀, min(y₀, y₀))))
forall y₀: nat, x₁: nat :: (add(x₁, mul(y₀, x₁)) == add(max(x₁, x₁), mul(y₀, max(x₁, x₁))))
forall y₀: nat, x₁: nat :: (add(x₁, mul(y₀, x₁)) == add(max(x₁, zero), mul(y₀, max(x₁, zero))))
forall y₀: nat, x₁: nat :: (add(x₁, mul(y₀, x₁)) == add(add(x₁, zero), mul(y₀, add(x₁, zero))))
forall x₀: nat, y₀: nat :: (add(x₀, succ(y₀)) == succ(add(y₀, max(x₀, zero))))
forall y₀: nat, y₁: nat, x₁: nat :: (mul(add(y₀, y₁), x₁) == mul(add(y₁, y₀), add(x₁, zero)))
forall y₀: nat, x₁: nat :: (max(succ(y₀), x₁) == max(succ(y₀), add(x₁, zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (max(x₀, add(y₀, y₁)) == max(add(x₀, zero), add(y₁, y₀)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, add(y₀, y₁)) == add(min(y₁, y₁), add(x₀, y₀)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, add(y₀, y₁)) == add(y₁, add(y₀, x₀)))
forall x₀: nat, y₀: nat :: (mul(x₀, succ(y₀)) == add(mul(x₀, y₀), max(x₀, zero)))
forall y₀: nat, y₁: nat, x₁: nat :: (min(min(y₀, y₁), x₁) == min(min(y₀, y₁), add(x₁, zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (sub(x₀, sub(y₀, y₁)) == sub(max(x₀, x₀), sub(y₀, y₁)))
forall x₀: nat, y₀: nat :: (add(x₀, succ(y₀)) == add(max(y₀, zero), succ(x₀)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, add(y₀, y₁)) == add(max(y₁, zero), add(y₀, x₀)))
forall y₀: nat, y₁: nat, x₁: nat :: (mul(add(y₀, y₁), x₁) == mul(add(y₀, y₁), add(x₁, zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, add(y₀, y₁)) == add(add(y₁, y₀), max(x₀, x₀)))
forall x₀: nat, y₀: nat, y₁: nat :: (mul(x₀, add(y₀, y₁)) == mul(add(x₀, zero), add(y₀, y₁)))
forall y₀: nat, x₁: nat :: (add(x₁, mul(y₀, x₁)) == add(min(x₁, x₁), mul(y₀, min(x₁, x₁))))
  136  evaluation/lemmas/nat.structural.bpl
forall x₀: nat, y₀: nat, y₁: nat :: (mul(x₀, max(y₀, y₁)) == mul(add(x₀, zero), max(y₀, y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (min(x₀, sub(y₀, y₁)) == min(max(x₀, zero), sub(y₀, y₁)))
forall y₀: nat, y₁: nat :: (succ(add(y₀, y₁)) == add(y₀, succ(y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (add(sub(y₀, y₁), x₁) == add(sub(y₀, y₁), min(x₁, x₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (add(mul(y₀, y₁), x₁) == add(mul(y₀, y₁), max(x₁, zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (max(x₀, sub(y₀, y₁)) == max(min(x₀, x₀), sub(y₀, y₁)))
forall y₀: nat, y₁: nat :: (succ(add(y₀, y₁)) == add(max(y₀, y₀), succ(y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (max(x₀, sub(y₀, y₁)) == max(max(x₀, zero), sub(y₀, y₁)))
forall y₀: nat, x₁: nat :: (sub(succ(y₀), x₁) == sub(succ(y₀), max(x₁, zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (sub(x₀, sub(y₀, y₁)) == sub(max(x₀, zero), sub(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (add(add(y₀, y₁), x₁) == add(add(y₀, y₁), max(x₁, zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (mul(x₀, min(y₀, y₁)) == mul(max(x₀, x₀), min(y₀, y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, add(y₀, y₁)) == add(max(y₀, zero), add(x₀, y₁)))
forall x₀: nat, y₀: nat :: (add(x₀, succ(y₀)) == add(max(x₀, zero), succ(y₀)))
forall y₀: nat, y₁: nat, x₁: nat :: (add(max(y₀, y₁), x₁) == add(max(y₀, y₁), add(x₁, zero)))
forall y₀: nat, y₁: nat, x₁: nat :: (add(add(y₀, y₁), x₁) == add(max(x₁, zero), add(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (add(add(y₀, y₁), x₁) == add(add(y₀, x₁), y₁))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, max(y₀, y₁)) == add(max(y₀, y₁), max(x₀, x₀)))
forall y₀: nat, y₁: nat, x₁: nat :: (add(add(y₀, y₁), x₁) == add(add(y₁, y₀), max(x₁, zero)))
forall y₀: nat, x₁: nat :: (succ(add(y₀, x₁)) == add(max(x₁, x₁), succ(y₀)))
forall y₀: nat, y₁: nat, x₁: nat :: (add(min(y₀, y₁), x₁) == add(min(x₁, x₁), min(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (max(max(y₀, y₁), x₁) == max(max(y₀, y₁), max(x₁, x₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (max(x₀, min(y₀, y₁)) == max(max(x₀, x₀), min(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (min(add(y₀, y₁), x₁) == min(add(y₁, y₀), min(x₁, x₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (max(x₀, add(y₀, y₁)) == max(max(x₀, zero), add(y₁, y₀)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, add(y₀, y₁)) == add(min(y₀, y₀), add(x₀, y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, add(y₀, y₁)) == add(add(y₀, y₁), min(x₀, x₀)))
forall y₀: nat, y₁: nat, x₁: nat :: (max(add(y₀, y₁), x₁) == max(add(y₀, y₁), max(x₁, zero)))
forall y₀: nat, y₁: nat, x₁: nat :: (add(max(y₀, y₁), x₁) == add(min(x₁, x₁), max(y₀, y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, add(y₀, y₁)) == add(add(x₀, y₀), y₁))
forall y₀: nat, y₁: nat, x₁: nat :: (min(max(y₀, y₁), x₁) == min(max(y₀, y₁), max(x₁, zero)))
forall y₀: nat, y₁: nat, x₁: nat :: (mul(add(y₀, y₁), x₁) == mul(add(y₁, y₀), max(x₁, zero)))
forall y₀: nat, y₁: nat, x₁: nat :: (max(add(y₀, y₁), x₁) == max(add(y₀, y₁), add(x₁, zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (sub(x₀, min(y₀, y₁)) == sub(max(x₀, zero), min(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (max(min(y₀, y₁), x₁) == max(min(y₀, y₁), add(x₁, zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (sub(x₀, min(y₀, y₁)) == sub(add(x₀, zero), min(y₀, y₁)))
forall x₀: nat, y₀: nat :: (min(x₀, succ(y₀)) == min(max(x₀, zero), succ(y₀)))
forall y₀: nat, y₁: nat, x₁: nat :: (mul(sub(y₀, y₁), x₁) == mul(sub(y₀, y₁), add(x₁, zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (min(x₀, add(y₀, y₁)) == min(max(x₀, zero), add(y₁, y₀)))
forall x₀: nat, y₀: nat, y₁: nat :: (min(x₀, min(y₀, y₁)) == min(add(x₀, zero), min(y₀, y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (max(x₀, sub(y₀, y₁)) == max(max(x₀, x₀), sub(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (min(mul(y₀, y₁), x₁) == min(mul(y₀, y₁), max(x₁, zero)))
forall x₀: nat, y₀: nat :: (max(x₀, succ(y₀)) == max(add(x₀, zero), succ(y₀)))
forall x₀: nat, y₀: nat, y₁: nat :: (min(x₀, add(y₀, y₁)) == min(add(x₀, zero), add(y₀, y₁)))
forall x₀: nat, y₀: nat :: (sub(x₀, succ(y₀)) == sub(add(x₀, zero), succ(y₀)))
forall y₀: nat, y₁: nat, x₁: nat :: (mul(max(y₀, y₁), x₁) == mul(max(y₀, y₁), add(x₁, zero)))
forall y₀: nat, y₁: nat, x₁: nat :: (min(max(y₀, y₁), x₁) == min(max(y₀, y₁), max(x₁, x₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (max(x₀, add(y₀, y₁)) == max(min(x₀, x₀), add(y₁, y₀)))
forall x₀: nat, y₀: nat, y₁: nat :: (mul(x₀, min(y₀, y₁)) == mul(max(x₀, zero), min(y₀, y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (max(x₀, max(y₀, y₁)) == max(min(x₀, x₀), max(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (max(min(y₀, y₁), x₁) == max(min(y₀, y₁), max(x₁, zero)))
forall y₀: nat, x₁: nat :: (add(y₀, x₁) == add(x₁, min(y₀, y₀)))
forall y₀: nat, y₁: nat, x₁: nat :: (max(add(y₀, y₁), x₁) == max(add(y₀, y₁), min(x₁, x₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (mul(x₀, add(y₀, y₁)) == mul(max(x₀, zero), add(y₁, y₀)))
forall y₀: nat, y₁: nat, x₁: nat :: (min(max(y₀, y₁), x₁) == min(max(y₀, y₁), min(x₁, x₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (sub(add(y₀, y₁), x₁) == sub(add(y₀, y₁), max(x₁, zero)))
forall y₀: nat, x₁: nat :: (succ(add(y₀, x₁)) == add(add(x₁, y₀), succ(zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (sub(x₀, add(y₀, y₁)) == sub(max(x₀, zero), add(y₁, y₀)))
forall y₀: nat, y₁: nat, x₁: nat :: (min(sub(y₀, y₁), x₁) == min(sub(y₀, y₁), min(x₁, x₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (max(min(y₀, y₁), x₁) == max(min(y₀, y₁), max(x₁, x₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (sub(x₀, max(y₀, y₁)) == sub(max(x₀, x₀), max(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (sub(min(y₀, y₁), x₁) == sub(min(y₀, y₁), min(x₁, x₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (sub(sub(y₀, y₁), x₁) == sub(sub(y₀, y₁), max(x₁, zero)))
forall y₀: nat, y₁: nat, x₁: nat :: (mul(sub(y₀, y₁), x₁) == mul(sub(y₀, y₁), min(x₁, x₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (sub(max(y₀, y₁), x₁) == sub(max(y₀, y₁), max(x₁, zero)))
forall y₀: nat, y₁: nat, x₁: nat :: (max(max(y₀, y₁), x₁) == max(max(y₀, y₁), min(x₁, x₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (mul(add(y₀, y₁), x₁) == mul(add(y₁, y₀), min(x₁, x₁)))
forall x₀: nat, y₀: nat :: (sub(x₀, succ(y₀)) == sub(max(x₀, zero), succ(y₀)))
forall x₀: nat, y₀: nat, y₁: nat :: (max(x₀, min(y₀, y₁)) == max(min(x₀, x₀), min(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (sub(sub(y₀, y₁), x₁) == sub(sub(y₀, y₁), max(x₁, x₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, min(y₀, y₁)) == min(add(x₀, y₀), add(x₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (min(sub(y₀, y₁), x₁) == min(sub(y₀, y₁), max(x₁, zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (min(x₀, max(y₀, y₁)) == min(max(x₀, zero), max(y₀, y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (max(x₀, max(y₀, y₁)) == max(max(x₀, zero), max(y₀, y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, add(y₀, y₁)) == add(add(x₀, y₀), add(y₁, zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (sub(x₀, mul(y₀, y₁)) == sub(max(x₀, zero), mul(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (mul(max(y₀, y₁), x₁) == mul(max(y₀, y₁), min(x₁, x₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (max(max(y₀, y₁), x₁) == max(max(y₀, y₁), max(x₁, zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (min(x₀, mul(y₀, y₁)) == min(min(x₀, x₀), mul(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (mul(mul(y₀, y₁), x₁) == mul(mul(y₀, y₁), min(x₁, x₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (max(mul(y₀, y₁), x₁) == max(mul(y₀, y₁), max(x₁, zero)))
forall y₀: nat, y₁: nat, x₁: nat :: (mul(sub(y₀, y₁), x₁) == mul(sub(y₀, y₁), max(x₁, zero)))
forall y₀: nat, y₁: nat, x₁: nat :: (sub(sub(y₀, y₁), x₁) == sub(sub(y₀, y₁), min(x₁, x₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (min(x₀, min(y₀, y₁)) == min(min(x₀, x₀), min(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (mul(min(y₀, y₁), x₁) == mul(min(y₀, y₁), min(x₁, x₁)))
forall y₀: nat, y₁: nat :: (succ(mul(y₀, y₁)) == add(mul(y₀, y₁), succ(zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (min(x₀, min(y₀, y₁)) == min(max(x₀, x₀), min(y₀, y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (mul(x₀, max(y₀, y₁)) == mul(max(x₀, zero), max(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (sub(max(y₀, y₁), x₁) == sub(max(y₀, y₁), min(x₁, x₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (add(add(y₀, y₁), x₁) == add(add(y₀, x₁), min(y₁, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (sub(mul(y₀, y₁), x₁) == sub(mul(y₀, y₁), max(x₁, x₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, add(y₀, y₁)) == add(add(x₀, zero), add(y₁, y₀)))
forall y₀: nat, y₁: nat, x₁: nat :: (mul(max(y₀, y₁), x₁) == mul(max(y₀, y₁), max(x₁, zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, add(y₀, y₁)) == add(max(y₀, zero), add(y₁, x₀)))
forall y₀: nat, y₁: nat, x₁: nat :: (sub(add(y₀, y₁), x₁) == sub(add(y₁, y₀), max(x₁, x₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (sub(max(y₀, y₁), x₁) == sub(max(y₀, y₁), max(x₁, x₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (max(x₀, min(y₀, y₁)) == max(max(x₀, zero), min(y₀, y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (min(x₀, mul(y₀, y₁)) == min(max(x₀, zero), mul(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (sub(min(y₀, y₁), x₁) == sub(min(y₀, y₁), max(x₁, x₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (mul(x₀, sub(y₀, y₁)) == mul(max(x₀, zero), sub(y₀, y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (mul(x₀, mul(y₀, y₁)) == mul(min(x₀, x₀), mul(y₀, y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, add(y₀, y₁)) == add(min(y₀, y₀), add(y₁, x₀)))
forall x₀: nat, y₀: nat, y₁: nat :: (max(x₀, mul(y₀, y₁)) == max(max(x₀, zero), mul(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (sub(add(y₀, y₁), x₁) == sub(add(y₁, y₀), min(x₁, x₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (mul(x₀, mul(y₀, y₁)) == mul(max(x₀, zero), mul(y₀, y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, add(y₀, y₁)) == add(add(x₀, y₀), min(y₁, y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, add(y₀, y₁)) == add(add(x₀, zero), add(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (add(add(y₀, y₁), x₁) == add(add(x₁, y₁), add(y₀, zero)))
forall x₀: nat, y₀: nat :: (add(x₀, succ(y₀)) == add(add(x₀, zero), succ(y₀)))
forall y₀: nat, y₁: nat, x₁: nat :: (add(mul(y₀, y₁), x₁) == add(mul(y₀, y₁), min(x₁, x₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (add(add(y₀, y₁), x₁) == add(add(y₀, x₁), add(y₁, zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (min(x₀, min(y₀, y₁)) == min(max(x₀, zero), min(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (min(add(y₀, y₁), x₁) == min(add(y₀, y₁), max(x₁, zero)))
forall y₀: nat, y₁: nat, x₁: nat :: (mul(min(y₀, y₁), x₁) == mul(min(y₀, y₁), max(x₁, zero)))
forall y₀: nat, y₁: nat, x₁: nat :: (min(min(y₀, y₁), x₁) == min(min(y₀, y₁), max(x₁, zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, add(y₀, y₁)) == add(min(x₀, x₀), add(y₀, y₁)))
forall y₀: nat, y₁: nat :: (succ(add(y₀, y₁)) == add(min(y₀, y₀), succ(y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (add(add(y₀, y₁), x₁) == add(min(x₁, x₁), add(y₀, y₁)))
forall x₀: nat, y₀: nat :: (mul(x₀, succ(y₀)) == add(x₀, mul(x₀, y₀)))
forall y₀: nat :: (succ(y₀) == add(y₀, succ(zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (mul(x₀, mul(y₀, y₁)) == mul(max(x₀, x₀), mul(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (mul(sub(y₀, y₁), x₁) == mul(sub(y₀, y₁), max(x₁, x₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, sub(y₀, y₁)) == add(sub(y₀, y₁), add(x₀, zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (min(x₀, sub(y₀, y₁)) == min(max(x₀, x₀), sub(y₀, y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (mul(x₀, add(y₀, y₁)) == mul(max(x₀, zero), add(y₀, y₁)))
forall x₀: nat, y₀: nat :: (add(x₀, succ(y₀)) == add(min(y₀, y₀), succ(x₀)))
forall x₀: nat, y₀: nat, y₁: nat :: (min(x₀, add(y₀, y₁)) == min(max(x₀, zero), add(y₀, y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, add(y₀, y₁)) == add(add(y₀, y₁), add(x₀, zero)))
forall y₀: nat, y₁: nat, x₁: nat :: (add(add(y₀, y₁), x₁) == add(max(y₀, zero), add(x₁, y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, mul(y₀, y₁)) == add(add(x₀, zero), mul(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (add(add(y₀, y₁), x₁) == add(y₁, add(y₀, x₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, add(y₀, y₁)) == add(add(y₀, y₁), max(x₀, zero)))
forall y₀: nat, x₁: nat :: (add(y₀, x₁) == add(y₀, max(x₁, zero)))
forall y₀: nat, y₁: nat, x₁: nat :: (add(sub(y₀, y₁), x₁) == add(sub(y₀, y₁), add(x₁, zero)))
forall y₀: nat, y₁: nat, x₁: nat :: (add(min(y₀, y₁), x₁) == add(min(y₀, y₁), add(x₁, zero)))
forall y₀: nat, y₁: nat :: (add(y₀, y₁) == add(y₁, add(y₀, zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, max(y₀, y₁)) == add(max(x₀, zero), max(y₀, y₁)))
forall x₀: nat, y₀: nat :: (add(x₀, succ(y₀)) == add(add(y₀, zero), succ(x₀)))
forall x₀: nat, y₀: nat, y₁: nat :: (sub(x₀, min(y₀, y₁)) == sub(max(x₀, x₀), min(y₀, y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (sub(x₀, mul(y₀, y₁)) == sub(max(x₀, x₀), mul(y₀, y₁)))
forall x₀: nat, y₀: nat :: (add(x₀, succ(y₀)) == succ(add(x₀, min(y₀, y₀))))
forall y₀: nat, x₁: nat :: (add(x₁, mul(y₀, x₁)) == add(max(x₁, x₁), mul(y₀, max(x₁, x₁))))
forall y₀: nat, x₁: nat :: (add(x₁, mul(y₀, x₁)) == add(max(x₁, zero), mul(y₀, max(x₁, zero))))
forall y₀: nat, x₁: nat :: (add(x₁, mul(y₀, x₁)) == add(add(x₁, zero), mul(y₀, add(x₁, zero))))
forall x₀: nat, y₀: nat :: (add(x₀, succ(y₀)) == succ(add(y₀, max(x₀, zero))))
forall y₀: nat, y₁: nat, x₁: nat :: (mul(add(y₀, y₁), x₁) == mul(add(y₁, y₀), add(x₁, zero)))
forall y₀: nat, x₁: nat :: (max(succ(y₀), x₁) == max(succ(y₀), add(x₁, zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (max(x₀, add(y₀, y₁)) == max(add(x₀, zero), add(y₁, y₀)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, add(y₀, y₁)) == add(min(y₁, y₁), add(x₀, y₀)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, add(y₀, y₁)) == add(y₁, add(y₀, x₀)))
forall x₀: nat, y₀: nat :: (mul(x₀, succ(y₀)) == add(mul(x₀, y₀), max(x₀, zero)))
forall y₀: nat, y₁: nat, x₁: nat :: (min(min(y₀, y₁), x₁) == min(min(y₀, y₁), add(x₁, zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (sub(x₀, sub(y₀, y₁)) == sub(max(x₀, x₀), sub(y₀, y₁)))
forall x₀: nat, y₀: nat :: (add(x₀, succ(y₀)) == add(max(y₀, zero), succ(x₀)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, add(y₀, y₁)) == add(max(y₁, zero), add(y₀, x₀)))
forall y₀: nat, y₁: nat, x₁: nat :: (mul(add(y₀, y₁), x₁) == mul(add(y₀, y₁), add(x₁, zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, add(y₀, y₁)) == add(add(y₁, y₀), max(x₀, x₀)))
forall x₀: nat, y₀: nat, y₁: nat :: (mul(x₀, add(y₀, y₁)) == mul(add(x₀, zero), add(y₀, y₁)))
forall y₀: nat, x₁: nat :: (add(x₁, mul(y₀, x₁)) == add(min(x₁, x₁), mul(y₀, min(x₁, x₁))))
  95  evaluation/lemmas/nat.conditional.bpl
forall x₀: nat, y₀: nat, y₁: nat :: (mul(x₀, max(y₀, y₁)) == mul(add(x₀, zero), max(y₀, y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (min(x₀, sub(y₀, y₁)) == min(max(x₀, zero), sub(y₀, y₁)))
forall y₀: nat, y₁: nat :: (succ(add(y₀, y₁)) == add(y₀, succ(y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (add(sub(y₀, y₁), x₁) == add(sub(y₀, y₁), min(x₁, x₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (add(mul(y₀, y₁), x₁) == add(mul(y₀, y₁), max(x₁, zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (max(x₀, sub(y₀, y₁)) == max(min(x₀, x₀), sub(y₀, y₁)))
forall y₀: nat, y₁: nat :: (succ(add(y₀, y₁)) == add(max(y₀, y₀), succ(y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (max(x₀, sub(y₀, y₁)) == max(max(x₀, zero), sub(y₀, y₁)))
forall y₀: nat, x₁: nat :: (sub(succ(y₀), x₁) == sub(succ(y₀), max(x₁, zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (sub(x₀, sub(y₀, y₁)) == sub(max(x₀, zero), sub(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (add(add(y₀, y₁), x₁) == add(add(y₀, y₁), max(x₁, zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (mul(x₀, min(y₀, y₁)) == mul(max(x₀, x₀), min(y₀, y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, add(y₀, y₁)) == add(max(y₀, zero), add(x₀, y₁)))
forall x₀: nat, y₀: nat :: (add(x₀, succ(y₀)) == add(max(x₀, zero), succ(y₀)))
forall y₀: nat, y₁: nat, x₁: nat :: (add(max(y₀, y₁), x₁) == add(max(y₀, y₁), add(x₁, zero)))
forall y₀: nat, y₁: nat, x₁: nat :: (add(add(y₀, y₁), x₁) == add(max(x₁, zero), add(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (add(add(y₀, y₁), x₁) == add(add(y₀, x₁), y₁))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, max(y₀, y₁)) == add(max(y₀, y₁), max(x₀, x₀)))
forall y₀: nat, y₁: nat, x₁: nat :: (add(add(y₀, y₁), x₁) == add(add(y₁, y₀), max(x₁, zero)))
forall y₀: nat, x₁: nat :: (succ(add(y₀, x₁)) == add(max(x₁, x₁), succ(y₀)))
forall y₀: nat, y₁: nat, x₁: nat :: (add(min(y₀, y₁), x₁) == add(min(x₁, x₁), min(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (max(max(y₀, y₁), x₁) == max(max(y₀, y₁), max(x₁, x₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (max(x₀, min(y₀, y₁)) == max(max(x₀, x₀), min(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (min(add(y₀, y₁), x₁) == min(add(y₁, y₀), min(x₁, x₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (max(x₀, add(y₀, y₁)) == max(max(x₀, zero), add(y₁, y₀)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, add(y₀, y₁)) == add(min(y₀, y₀), add(x₀, y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, add(y₀, y₁)) == add(add(y₀, y₁), min(x₀, x₀)))
forall y₀: nat, y₁: nat, x₁: nat :: (max(add(y₀, y₁), x₁) == max(add(y₀, y₁), max(x₁, zero)))
forall y₀: nat, y₁: nat, x₁: nat :: (add(max(y₀, y₁), x₁) == add(min(x₁, x₁), max(y₀, y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, add(y₀, y₁)) == add(add(x₀, y₀), y₁))
forall y₀: nat, y₁: nat, x₁: nat :: (min(max(y₀, y₁), x₁) == min(max(y₀, y₁), max(x₁, zero)))
forall y₀: nat, y₁: nat, x₁: nat :: (mul(add(y₀, y₁), x₁) == mul(add(y₁, y₀), max(x₁, zero)))
forall y₀: nat, y₁: nat, x₁: nat :: (max(add(y₀, y₁), x₁) == max(add(y₀, y₁), add(x₁, zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (sub(x₀, min(y₀, y₁)) == sub(max(x₀, zero), min(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (max(min(y₀, y₁), x₁) == max(min(y₀, y₁), add(x₁, zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (sub(x₀, min(y₀, y₁)) == sub(add(x₀, zero), min(y₀, y₁)))
forall x₀: nat, y₀: nat :: (min(x₀, succ(y₀)) == min(max(x₀, zero), succ(y₀)))
forall y₀: nat, y₁: nat, x₁: nat :: (mul(sub(y₀, y₁), x₁) == mul(sub(y₀, y₁), add(x₁, zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (min(x₀, add(y₀, y₁)) == min(max(x₀, zero), add(y₁, y₀)))
forall x₀: nat, y₀: nat, y₁: nat :: (min(x₀, min(y₀, y₁)) == min(add(x₀, zero), min(y₀, y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (max(x₀, sub(y₀, y₁)) == max(max(x₀, x₀), sub(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (min(mul(y₀, y₁), x₁) == min(mul(y₀, y₁), max(x₁, zero)))
forall x₀: nat, y₀: nat :: (max(x₀, succ(y₀)) == max(add(x₀, zero), succ(y₀)))
forall x₀: nat, y₀: nat, y₁: nat :: (min(x₀, add(y₀, y₁)) == min(add(x₀, zero), add(y₀, y₁)))
forall x₀: nat, y₀: nat :: (sub(x₀, succ(y₀)) == sub(add(x₀, zero), succ(y₀)))
forall y₀: nat, y₁: nat, x₁: nat :: (mul(max(y₀, y₁), x₁) == mul(max(y₀, y₁), add(x₁, zero)))
forall y₀: nat, y₁: nat, x₁: nat :: (min(max(y₀, y₁), x₁) == min(max(y₀, y₁), max(x₁, x₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (max(x₀, add(y₀, y₁)) == max(min(x₀, x₀), add(y₁, y₀)))
forall x₀: nat, y₀: nat, y₁: nat :: (mul(x₀, min(y₀, y₁)) == mul(max(x₀, zero), min(y₀, y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (max(x₀, max(y₀, y₁)) == max(min(x₀, x₀), max(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (max(min(y₀, y₁), x₁) == max(min(y₀, y₁), max(x₁, zero)))
forall y₀: nat, x₁: nat :: (add(y₀, x₁) == add(x₁, min(y₀, y₀)))
forall y₀: nat, y₁: nat, x₁: nat :: (max(add(y₀, y₁), x₁) == max(add(y₀, y₁), min(x₁, x₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (mul(x₀, add(y₀, y₁)) == mul(max(x₀, zero), add(y₁, y₀)))
forall y₀: nat, y₁: nat, x₁: nat :: (min(max(y₀, y₁), x₁) == min(max(y₀, y₁), min(x₁, x₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (sub(add(y₀, y₁), x₁) == sub(add(y₀, y₁), max(x₁, zero)))
forall y₀: nat, x₁: nat :: (succ(add(y₀, x₁)) == add(add(x₁, y₀), succ(zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (sub(x₀, add(y₀, y₁)) == sub(max(x₀, zero), add(y₁, y₀)))
forall y₀: nat, y₁: nat, x₁: nat :: (min(sub(y₀, y₁), x₁) == min(sub(y₀, y₁), min(x₁, x₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (max(min(y₀, y₁), x₁) == max(min(y₀, y₁), max(x₁, x₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (sub(x₀, max(y₀, y₁)) == sub(max(x₀, x₀), max(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (sub(min(y₀, y₁), x₁) == sub(min(y₀, y₁), min(x₁, x₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (sub(sub(y₀, y₁), x₁) == sub(sub(y₀, y₁), max(x₁, zero)))
forall y₀: nat, y₁: nat, x₁: nat :: (mul(sub(y₀, y₁), x₁) == mul(sub(y₀, y₁), min(x₁, x₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (sub(max(y₀, y₁), x₁) == sub(max(y₀, y₁), max(x₁, zero)))
forall y₀: nat, y₁: nat, x₁: nat :: (max(max(y₀, y₁), x₁) == max(max(y₀, y₁), min(x₁, x₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (mul(add(y₀, y₁), x₁) == mul(add(y₁, y₀), min(x₁, x₁)))
forall x₀: nat, y₀: nat :: (sub(x₀, succ(y₀)) == sub(max(x₀, zero), succ(y₀)))
forall x₀: nat, y₀: nat, y₁: nat :: (max(x₀, min(y₀, y₁)) == max(min(x₀, x₀), min(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (sub(sub(y₀, y₁), x₁) == sub(sub(y₀, y₁), max(x₁, x₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, min(y₀, y₁)) == min(add(x₀, y₀), add(x₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (min(sub(y₀, y₁), x₁) == min(sub(y₀, y₁), max(x₁, zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (min(x₀, max(y₀, y₁)) == min(max(x₀, zero), max(y₀, y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (max(x₀, max(y₀, y₁)) == max(max(x₀, zero), max(y₀, y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, add(y₀, y₁)) == add(add(x₀, y₀), add(y₁, zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (sub(x₀, mul(y₀, y₁)) == sub(max(x₀, zero), mul(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (mul(max(y₀, y₁), x₁) == mul(max(y₀, y₁), min(x₁, x₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (max(max(y₀, y₁), x₁) == max(max(y₀, y₁), max(x₁, zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (min(x₀, mul(y₀, y₁)) == min(min(x₀, x₀), mul(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (mul(mul(y₀, y₁), x₁) == mul(mul(y₀, y₁), min(x₁, x₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (max(mul(y₀, y₁), x₁) == max(mul(y₀, y₁), max(x₁, zero)))
forall y₀: nat, y₁: nat, x₁: nat :: (mul(sub(y₀, y₁), x₁) == mul(sub(y₀, y₁), max(x₁, zero)))
forall y₀: nat, y₁: nat, x₁: nat :: (sub(sub(y₀, y₁), x₁) == sub(sub(y₀, y₁), min(x₁, x₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (min(x₀, min(y₀, y₁)) == min(min(x₀, x₀), min(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (mul(min(y₀, y₁), x₁) == mul(min(y₀, y₁), min(x₁, x₁)))
forall y₀: nat, y₁: nat :: (succ(mul(y₀, y₁)) == add(mul(y₀, y₁), succ(zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (min(x₀, min(y₀, y₁)) == min(max(x₀, x₀), min(y₀, y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (mul(x₀, max(y₀, y₁)) == mul(max(x₀, zero), max(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (sub(max(y₀, y₁), x₁) == sub(max(y₀, y₁), min(x₁, x₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (add(add(y₀, y₁), x₁) == add(add(y₀, x₁), min(y₁, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (sub(mul(y₀, y₁), x₁) == sub(mul(y₀, y₁), max(x₁, x₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, add(y₀, y₁)) == add(add(x₀, zero), add(y₁, y₀)))
forall y₀: nat, y₁: nat, x₁: nat :: (mul(max(y₀, y₁), x₁) == mul(max(y₀, y₁), max(x₁, zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, add(y₀, y₁)) == add(max(y₀, zero), add(y₁, x₀)))
forall y₀: nat, y₁: nat, x₁: nat :: (sub(add(y₀, y₁), x₁) == sub(add(y₁, y₀), max(x₁, x₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (sub(max(y₀, y₁), x₁) == sub(max(y₀, y₁), max(x₁, x₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (max(x₀, min(y₀, y₁)) == max(max(x₀, zero), min(y₀, y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (min(x₀, mul(y₀, y₁)) == min(max(x₀, zero), mul(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (sub(min(y₀, y₁), x₁) == sub(min(y₀, y₁), max(x₁, x₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (mul(x₀, sub(y₀, y₁)) == mul(max(x₀, zero), sub(y₀, y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (mul(x₀, mul(y₀, y₁)) == mul(min(x₀, x₀), mul(y₀, y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, add(y₀, y₁)) == add(min(y₀, y₀), add(y₁, x₀)))
forall x₀: nat, y₀: nat, y₁: nat :: (max(x₀, mul(y₀, y₁)) == max(max(x₀, zero), mul(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (sub(add(y₀, y₁), x₁) == sub(add(y₁, y₀), min(x₁, x₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (mul(x₀, mul(y₀, y₁)) == mul(max(x₀, zero), mul(y₀, y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, add(y₀, y₁)) == add(add(x₀, y₀), min(y₁, y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, add(y₀, y₁)) == add(add(x₀, zero), add(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (add(add(y₀, y₁), x₁) == add(add(x₁, y₁), add(y₀, zero)))
forall x₀: nat, y₀: nat :: (add(x₀, succ(y₀)) == add(add(x₀, zero), succ(y₀)))
forall y₀: nat, y₁: nat, x₁: nat :: (add(mul(y₀, y₁), x₁) == add(mul(y₀, y₁), min(x₁, x₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (add(add(y₀, y₁), x₁) == add(add(y₀, x₁), add(y₁, zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (min(x₀, min(y₀, y₁)) == min(max(x₀, zero), min(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (min(add(y₀, y₁), x₁) == min(add(y₀, y₁), max(x₁, zero)))
forall y₀: nat, y₁: nat, x₁: nat :: (mul(min(y₀, y₁), x₁) == mul(min(y₀, y₁), max(x₁, zero)))
forall y₀: nat, y₁: nat, x₁: nat :: (min(min(y₀, y₁), x₁) == min(min(y₀, y₁), max(x₁, zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, add(y₀, y₁)) == add(min(x₀, x₀), add(y₀, y₁)))
forall y₀: nat, y₁: nat :: (succ(add(y₀, y₁)) == add(min(y₀, y₀), succ(y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (add(add(y₀, y₁), x₁) == add(min(x₁, x₁), add(y₀, y₁)))
forall x₀: nat, y₀: nat :: (mul(x₀, succ(y₀)) == add(x₀, mul(x₀, y₀)))
forall y₀: nat :: (succ(y₀) == add(y₀, succ(zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (mul(x₀, mul(y₀, y₁)) == mul(max(x₀, x₀), mul(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (mul(sub(y₀, y₁), x₁) == mul(sub(y₀, y₁), max(x₁, x₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, sub(y₀, y₁)) == add(sub(y₀, y₁), add(x₀, zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (min(x₀, sub(y₀, y₁)) == min(max(x₀, x₀), sub(y₀, y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (mul(x₀, add(y₀, y₁)) == mul(max(x₀, zero), add(y₀, y₁)))
forall x₀: nat, y₀: nat :: (add(x₀, succ(y₀)) == add(min(y₀, y₀), succ(x₀)))
forall x₀: nat, y₀: nat, y₁: nat :: (min(x₀, add(y₀, y₁)) == min(max(x₀, zero), add(y₀, y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, add(y₀, y₁)) == add(add(y₀, y₁), add(x₀, zero)))
forall y₀: nat, y₁: nat, x₁: nat :: (add(add(y₀, y₁), x₁) == add(max(y₀, zero), add(x₁, y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, mul(y₀, y₁)) == add(add(x₀, zero), mul(y₀, y₁)))
forall y₀: nat, y₁: nat, x₁: nat :: (add(add(y₀, y₁), x₁) == add(y₁, add(y₀, x₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, add(y₀, y₁)) == add(add(y₀, y₁), max(x₀, zero)))
forall y₀: nat, x₁: nat :: (add(y₀, x₁) == add(y₀, max(x₁, zero)))
forall y₀: nat, y₁: nat, x₁: nat :: (add(sub(y₀, y₁), x₁) == add(sub(y₀, y₁), add(x₁, zero)))
forall y₀: nat, y₁: nat, x₁: nat :: (add(min(y₀, y₁), x₁) == add(min(y₀, y₁), add(x₁, zero)))
forall y₀: nat, y₁: nat :: (add(y₀, y₁) == add(y₁, add(y₀, zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, max(y₀, y₁)) == add(max(x₀, zero), max(y₀, y₁)))
forall x₀: nat, y₀: nat :: (add(x₀, succ(y₀)) == add(add(y₀, zero), succ(x₀)))
forall x₀: nat, y₀: nat, y₁: nat :: (sub(x₀, min(y₀, y₁)) == sub(max(x₀, x₀), min(y₀, y₁)))
forall x₀: nat, y₀: nat, y₁: nat :: (sub(x₀, mul(y₀, y₁)) == sub(max(x₀, x₀), mul(y₀, y₁)))
forall x₀: nat, y₀: nat :: (add(x₀, succ(y₀)) == succ(add(x₀, min(y₀, y₀))))
forall y₀: nat, x₁: nat :: (add(x₁, mul(y₀, x₁)) == add(max(x₁, x₁), mul(y₀, max(x₁, x₁))))
forall y₀: nat, x₁: nat :: (add(x₁, mul(y₀, x₁)) == add(max(x₁, zero), mul(y₀, max(x₁, zero))))
forall y₀: nat, x₁: nat :: (add(x₁, mul(y₀, x₁)) == add(add(x₁, zero), mul(y₀, add(x₁, zero))))
forall x₀: nat, y₀: nat :: (add(x₀, succ(y₀)) == succ(add(y₀, max(x₀, zero))))
forall y₀: nat, y₁: nat, x₁: nat :: (mul(add(y₀, y₁), x₁) == mul(add(y₁, y₀), add(x₁, zero)))
forall y₀: nat, x₁: nat :: (max(succ(y₀), x₁) == max(succ(y₀), add(x₁, zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (max(x₀, add(y₀, y₁)) == max(add(x₀, zero), add(y₁, y₀)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, add(y₀, y₁)) == add(min(y₁, y₁), add(x₀, y₀)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, add(y₀, y₁)) == add(y₁, add(y₀, x₀)))
forall x₀: nat, y₀: nat :: (mul(x₀, succ(y₀)) == add(mul(x₀, y₀), max(x₀, zero)))
forall y₀: nat, y₁: nat, x₁: nat :: (min(min(y₀, y₁), x₁) == min(min(y₀, y₁), add(x₁, zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (sub(x₀, sub(y₀, y₁)) == sub(max(x₀, x₀), sub(y₀, y₁)))
forall x₀: nat, y₀: nat :: (add(x₀, succ(y₀)) == add(max(y₀, zero), succ(x₀)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, add(y₀, y₁)) == add(max(y₁, zero), add(y₀, x₀)))
forall y₀: nat, y₁: nat, x₁: nat :: (mul(add(y₀, y₁), x₁) == mul(add(y₀, y₁), add(x₁, zero)))
forall x₀: nat, y₀: nat, y₁: nat :: (add(x₀, add(y₀, y₁)) == add(add(y₁, y₀), max(x₀, x₀)))
forall x₀: nat, y₀: nat, y₁: nat :: (mul(x₀, add(y₀, y₁)) == mul(add(x₀, zero), add(y₀, y₁)))
forall y₀: nat, x₁: nat :: (add(x₁, mul(y₀, x₁)) == add(min(x₁, x₁), mul(y₀, min(x₁, x₁))))
  136  evaluation/lemmas/nat.th.log
