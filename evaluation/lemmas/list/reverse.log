11:26:25 [WARN] Collecting statistics
11:26:25 [WARN]  ex is: zero
11:26:25 [WARN]  ex is: (succ zero)
11:26:25 [WARN]  ex is: (succ (succ zero))
11:26:25 [WARN]  ex is: nil
11:26:25 [WARN]  ex is: (cons autovar_nat_0 nil)
11:26:25 [WARN]  ex is: (cons autovar_nat_1 (cons autovar_nat_0 nil))
11:26:25 [WARN] Proof mode: false
11:26:25 [WARN]  ex is: zero
11:26:25 [WARN]  ex is: (succ zero)
11:26:25 [WARN]  ex is: (succ (succ zero))
11:26:25 [WARN]  ex is: nil
11:26:25 [WARN]  ex is: (cons autovar_nat_0 nil)
11:26:25 [WARN]  ex is: (cons autovar_nat_1 (cons autovar_nat_0 nil))
11:26:25 [WARN] Proof mode: false
11:26:25 [WARN] proved: (nreverse ?ts_ph_list_0 nil) => (reverse ?ts_ph_list_0)
11:26:25 [WARN] proved: (reverse ?ts_ph_list_0) => (nreverse ?ts_ph_list_0 nil)
11:26:25 [WARN] proved: (append ?ts_ph_list_0 nil) => ?ts_ph_list_0
11:26:25 [WARN] proved: (reverse (append ?ts_ph_list_0 ?ts_ph_list_1)) => (nreverse ?ts_ph_list_0 (reverse ?ts_ph_list_1))
11:26:25 [WARN] proved: (nreverse ?ts_ph_list_0 (reverse ?ts_ph_list_1)) => (reverse (append ?ts_ph_list_0 ?ts_ph_list_1))
11:26:25 [WARN] proved: (cons ?ts_ph_nat_1 (nreverse ?ts_ph_list_0 ?ts_ph_list_1)) => (nreverse ?ts_ph_list_0 (cons ?ts_ph_nat_1 ?ts_ph_list_1))
11:26:25 [WARN] proved: (nreverse ?ts_ph_list_0 (cons ?ts_ph_nat_1 ?ts_ph_list_1)) => (cons ?ts_ph_nat_1 (nreverse ?ts_ph_list_0 ?ts_ph_list_1))
11:26:25 [WARN] generalized case_split proof as: (append ?ts_ph_list_0 (append ?ts_ph_list_1 ?ts_ph_list_2)) -- (append (append ?ts_ph_list_0 ?ts_ph_list_1) ?ts_ph_list_2)
11:26:25 [WARN] proved: (append ?ts_ph_list_0 (append ?ts_ph_list_1 ?ts_ph_list_2)) => (append (append ?ts_ph_list_0 ?ts_ph_list_1) ?ts_ph_list_2)
11:26:25 [WARN] proved: (append (append ?ts_ph_list_0 ?ts_ph_list_1) ?ts_ph_list_2) => (append ?ts_ph_list_0 (append ?ts_ph_list_1 ?ts_ph_list_2))
11:26:25 [WARN] generalized case_split proof as: (nreverse ?ts_ph_list_0 (nreverse ?ts_ph_list_1 ?ts_ph_list_2)) -- (nreverse (append ?ts_ph_list_0 ?ts_ph_list_1) ?ts_ph_list_2)
11:26:25 [WARN] proved: (nreverse ?ts_ph_list_0 (nreverse ?ts_ph_list_1 ?ts_ph_list_2)) => (nreverse (append ?ts_ph_list_0 ?ts_ph_list_1) ?ts_ph_list_2)
11:26:25 [WARN] proved: (nreverse (append ?ts_ph_list_0 ?ts_ph_list_1) ?ts_ph_list_2) => (nreverse ?ts_ph_list_0 (nreverse ?ts_ph_list_1 ?ts_ph_list_2))
11:26:25 [WARN] proved: (qreverse (qreverse ?ts_ph_list_0 ?ts_ph_list_1) nil) => (qreverse ?ts_ph_list_1 ?ts_ph_list_0)
11:26:25 [WARN] proved: (qreverse ?ts_ph_list_1 ?ts_ph_list_0) => (qreverse (qreverse ?ts_ph_list_0 ?ts_ph_list_1) nil)
11:26:25 [WARN] proved: (nreverse ?ts_ph_list_0 (append ?ts_ph_list_0 ?ts_ph_list_1)) => (append ?ts_ph_list_0 (nreverse ?ts_ph_list_0 ?ts_ph_list_1))
11:26:25 [WARN] proved: (append ?ts_ph_list_0 (nreverse ?ts_ph_list_0 ?ts_ph_list_1)) => (nreverse ?ts_ph_list_0 (append ?ts_ph_list_0 ?ts_ph_list_1))
11:26:25 [WARN] proved: (nreverse (nreverse ?ts_ph_list_0 ?ts_ph_list_0) (cons ?ts_ph_nat_1 nil)) => (cons ?ts_ph_nat_1 (append ?ts_ph_list_0 (reverse ?ts_ph_list_0)))
11:26:25 [WARN] proved: (cons ?ts_ph_nat_1 (append ?ts_ph_list_0 (reverse ?ts_ph_list_0))) => (nreverse (nreverse ?ts_ph_list_0 ?ts_ph_list_0) (cons ?ts_ph_nat_1 nil))
11:26:25 [WARN] proved: (nreverse
  (nreverse ?ts_ph_list_0 ?ts_ph_list_0)
  (nreverse ?ts_ph_list_0 ?ts_ph_list_0)) => (append
  (nreverse ?ts_ph_list_0 ?ts_ph_list_0)
  (nreverse ?ts_ph_list_0 ?ts_ph_list_0))
11:26:25 [WARN] proved: (append
  (nreverse ?ts_ph_list_0 ?ts_ph_list_0)
  (nreverse ?ts_ph_list_0 ?ts_ph_list_0)) => (nreverse
  (nreverse ?ts_ph_list_0 ?ts_ph_list_0)
  (nreverse ?ts_ph_list_0 ?ts_ph_list_0))
11:26:26 [WARN] proved: (reverse (reverse ?ts_ph_list_0)) => ?ts_ph_list_0
11:26:26 [WARN] proved: (qreverse ?ts_ph_list_0 ?ts_ph_list_1) => (append (reverse ?ts_ph_list_0) ?ts_ph_list_1)
11:26:26 [WARN] proved: (append (reverse ?ts_ph_list_0) ?ts_ph_list_1) => (qreverse ?ts_ph_list_0 ?ts_ph_list_1)
11:26:27 [WARN] proved: (append ?ts_ph_list_0 ?ts_ph_list_1) => (nreverse (reverse ?ts_ph_list_1) ?ts_ph_list_0)
11:26:27 [WARN] proved: (nreverse (reverse ?ts_ph_list_1) ?ts_ph_list_0) => (append ?ts_ph_list_0 ?ts_ph_list_1)
