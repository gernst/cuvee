(datatype nat () ((zero nat) (succ nat nat)))
(datatype list () ((nil list) (cons nat list list)))
(declare-fun length (list) nat)
(=> rule1 (length nil) zero)
(=> rule2 (length (cons ?x ?xs)) (succ (length ?xs)))
(declare-fun qlength (list nat) nat)
(=> rule3 (qlength nil ?n) ?n)
(=> rule4 (qlength (cons ?x ?xs) ?n) (qlength ?xs (succ ?n)))
(declare-fun nlength (list nat) nat)
(=> rule5 (nlength nil ?n) ?n)
(=> rule6 (nlength (cons ?x ?xs) ?n) (succ (nlength ?xs ?n)))
