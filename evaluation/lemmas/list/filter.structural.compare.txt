evaluation/lemmas/list/filter.structural.bpl
  2  number of lemmas
  0  wrong
forall y₀: [nat]Bool, y₁: list :: (length(filter(y₀, y₁)) == countif(y₀, y₁))
forall y₀: Bool :: (not_(not_(y₀)) <==> y₀)
  1  nontrivial
forall y₀: [nat]Bool, y₁: list :: (length(filter(y₀, y₁)) == countif(y₀, y₁))
forall y₀: Bool :: (not_(not_(y₀)) <==> y₀)
  1  reduced greedily
forall y₀: [nat]Bool, y₁: list :: (length(filter(y₀, y₁)) == countif(y₀, y₁))
forall y₀: Bool :: (not_(not_(y₀)) <==> y₀)
  1  independent
forall y₀: [nat]Bool, y₁: list :: (length(filter(y₀, y₁)) == countif(y₀, y₁))
forall y₀: Bool :: (not_(not_(y₀)) <==> y₀)
  0  evaluation/lemmas/list/filter.conditional.bpl
forall y₀: [nat]Bool, y₁: list :: (length(filter(y₀, y₁)) == countif(y₀, y₁))
forall y₀: Bool :: (not_(not_(y₀)) <==> y₀)
  0  evaluation/lemmas/list/filter.enumerate.bpl
forall y₀: [nat]Bool, y₁: list :: (length(filter(y₀, y₁)) == countif(y₀, y₁))
forall y₀: Bool :: (not_(not_(y₀)) <==> y₀)
  0  evaluation/lemmas/list/filter.th.log
