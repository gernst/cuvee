evaluation/lemmas/list/length.th.log
  22  number of lemmas
  0  wrong
forall ?ts_ph_list_0: list :: (length(?ts_ph_list_0) == nlength(?ts_ph_list_0, zero))
forall ?ts_ph_list_0: list :: (nlength(?ts_ph_list_0, zero) == length(?ts_ph_list_0))
forall ?ts_ph_list_0: list, ?ts_ph_nat_1: nat :: (succ(nlength(?ts_ph_list_0, ?ts_ph_nat_1)) == nlength(?ts_ph_list_0, succ(?ts_ph_nat_1)))
forall ?ts_ph_list_0: list, ?ts_ph_nat_1: nat :: (nlength(?ts_ph_list_0, succ(?ts_ph_nat_1)) == succ(nlength(?ts_ph_list_0, ?ts_ph_nat_1)))
forall ?ts_ph_list_0: list, ?ts_ph_nat_1: nat :: (qlength(?ts_ph_list_0, succ(?ts_ph_nat_1)) == nlength(?ts_ph_list_0, succ(?ts_ph_nat_1)))
forall ?ts_ph_list_0: list, ?ts_ph_nat_1: nat :: (nlength(?ts_ph_list_0, succ(?ts_ph_nat_1)) == qlength(?ts_ph_list_0, succ(?ts_ph_nat_1)))
forall ?ts_ph_list_0: list, ?ts_ph_list_1: list :: (qlength(?ts_ph_list_0, length(?ts_ph_list_1)) == nlength(?ts_ph_list_0, length(?ts_ph_list_1)))
forall ?ts_ph_list_0: list, ?ts_ph_list_1: list :: (nlength(?ts_ph_list_0, length(?ts_ph_list_1)) == qlength(?ts_ph_list_0, length(?ts_ph_list_1)))
forall ?ts_ph_list_0: list, ?ts_ph_nat_0: nat :: (succ(qlength(?ts_ph_list_0, ?ts_ph_nat_0)) == succ(nlength(?ts_ph_list_0, ?ts_ph_nat_0)))
forall ?ts_ph_list_0: list, ?ts_ph_nat_0: nat :: (succ(nlength(?ts_ph_list_0, ?ts_ph_nat_0)) == succ(qlength(?ts_ph_list_0, ?ts_ph_nat_0)))
forall ?ts_ph_list_0: list, ?ts_ph_nat_1: nat, ?ts_ph_list_1: list :: (cons(nlength(?ts_ph_list_0, ?ts_ph_nat_1), ?ts_ph_list_1) == cons(qlength(?ts_ph_list_0, ?ts_ph_nat_1), ?ts_ph_list_1))
forall ?ts_ph_list_0: list, ?ts_ph_nat_1: nat, ?ts_ph_list_1: list :: (cons(qlength(?ts_ph_list_0, ?ts_ph_nat_1), ?ts_ph_list_1) == cons(nlength(?ts_ph_list_0, ?ts_ph_nat_1), ?ts_ph_list_1))
forall ?ts_ph_list_1: list, ?ts_ph_list_0: list, ?ts_ph_nat_1: nat :: (qlength(?ts_ph_list_1, nlength(?ts_ph_list_0, ?ts_ph_nat_1)) == qlength(?ts_ph_list_1, qlength(?ts_ph_list_0, ?ts_ph_nat_1)))
forall ?ts_ph_list_1: list, ?ts_ph_list_0: list, ?ts_ph_nat_1: nat :: (qlength(?ts_ph_list_1, qlength(?ts_ph_list_0, ?ts_ph_nat_1)) == qlength(?ts_ph_list_1, nlength(?ts_ph_list_0, ?ts_ph_nat_1)))
forall ?ts_ph_list_1: list, ?ts_ph_list_0: list, ?ts_ph_nat_0: nat :: (nlength(?ts_ph_list_1, qlength(?ts_ph_list_0, ?ts_ph_nat_0)) == nlength(?ts_ph_list_1, nlength(?ts_ph_list_0, ?ts_ph_nat_0)))
forall ?ts_ph_list_1: list, ?ts_ph_list_0: list, ?ts_ph_nat_0: nat :: (nlength(?ts_ph_list_1, nlength(?ts_ph_list_0, ?ts_ph_nat_0)) == nlength(?ts_ph_list_1, qlength(?ts_ph_list_0, ?ts_ph_nat_0)))
forall ?ts_ph_list_0: list, ?ts_ph_list_1: list, ?ts_ph_nat_0: nat :: (qlength(?ts_ph_list_0, nlength(?ts_ph_list_1, ?ts_ph_nat_0)) == nlength(?ts_ph_list_0, nlength(?ts_ph_list_1, ?ts_ph_nat_0)))
forall ?ts_ph_list_0: list, ?ts_ph_list_1: list, ?ts_ph_nat_0: nat :: (nlength(?ts_ph_list_0, nlength(?ts_ph_list_1, ?ts_ph_nat_0)) == qlength(?ts_ph_list_0, nlength(?ts_ph_list_1, ?ts_ph_nat_0)))
forall ?ts_ph_list_0: list, ?ts_ph_list_1: list :: (qlength(?ts_ph_list_0, length(?ts_ph_list_1)) == qlength(?ts_ph_list_1, length(?ts_ph_list_0)))
forall ?ts_ph_list_1: list, ?ts_ph_list_0: list :: (qlength(?ts_ph_list_1, length(?ts_ph_list_0)) == qlength(?ts_ph_list_0, length(?ts_ph_list_1)))
forall ?ts_ph_list_1: list, ?ts_ph_list_0: list, ?ts_ph_nat_1: nat :: (qlength(?ts_ph_list_1, qlength(?ts_ph_list_0, ?ts_ph_nat_1)) == qlength(?ts_ph_list_0, qlength(?ts_ph_list_1, ?ts_ph_nat_1)))
forall ?ts_ph_list_0: list, ?ts_ph_list_1: list, ?ts_ph_nat_1: nat :: (qlength(?ts_ph_list_0, qlength(?ts_ph_list_1, ?ts_ph_nat_1)) == qlength(?ts_ph_list_1, qlength(?ts_ph_list_0, ?ts_ph_nat_1)))
  22  nontrivial
forall ?ts_ph_list_0: list :: (length(?ts_ph_list_0) == nlength(?ts_ph_list_0, zero))
forall ?ts_ph_list_0: list :: (nlength(?ts_ph_list_0, zero) == length(?ts_ph_list_0))
forall ?ts_ph_list_0: list, ?ts_ph_nat_1: nat :: (succ(nlength(?ts_ph_list_0, ?ts_ph_nat_1)) == nlength(?ts_ph_list_0, succ(?ts_ph_nat_1)))
forall ?ts_ph_list_0: list, ?ts_ph_nat_1: nat :: (nlength(?ts_ph_list_0, succ(?ts_ph_nat_1)) == succ(nlength(?ts_ph_list_0, ?ts_ph_nat_1)))
forall ?ts_ph_list_0: list, ?ts_ph_nat_1: nat :: (qlength(?ts_ph_list_0, succ(?ts_ph_nat_1)) == nlength(?ts_ph_list_0, succ(?ts_ph_nat_1)))
forall ?ts_ph_list_0: list, ?ts_ph_nat_1: nat :: (nlength(?ts_ph_list_0, succ(?ts_ph_nat_1)) == qlength(?ts_ph_list_0, succ(?ts_ph_nat_1)))
forall ?ts_ph_list_0: list, ?ts_ph_list_1: list :: (qlength(?ts_ph_list_0, length(?ts_ph_list_1)) == nlength(?ts_ph_list_0, length(?ts_ph_list_1)))
forall ?ts_ph_list_0: list, ?ts_ph_list_1: list :: (nlength(?ts_ph_list_0, length(?ts_ph_list_1)) == qlength(?ts_ph_list_0, length(?ts_ph_list_1)))
forall ?ts_ph_list_0: list, ?ts_ph_nat_0: nat :: (succ(qlength(?ts_ph_list_0, ?ts_ph_nat_0)) == succ(nlength(?ts_ph_list_0, ?ts_ph_nat_0)))
forall ?ts_ph_list_0: list, ?ts_ph_nat_0: nat :: (succ(nlength(?ts_ph_list_0, ?ts_ph_nat_0)) == succ(qlength(?ts_ph_list_0, ?ts_ph_nat_0)))
forall ?ts_ph_list_0: list, ?ts_ph_nat_1: nat, ?ts_ph_list_1: list :: (cons(nlength(?ts_ph_list_0, ?ts_ph_nat_1), ?ts_ph_list_1) == cons(qlength(?ts_ph_list_0, ?ts_ph_nat_1), ?ts_ph_list_1))
forall ?ts_ph_list_0: list, ?ts_ph_nat_1: nat, ?ts_ph_list_1: list :: (cons(qlength(?ts_ph_list_0, ?ts_ph_nat_1), ?ts_ph_list_1) == cons(nlength(?ts_ph_list_0, ?ts_ph_nat_1), ?ts_ph_list_1))
forall ?ts_ph_list_1: list, ?ts_ph_list_0: list, ?ts_ph_nat_1: nat :: (qlength(?ts_ph_list_1, nlength(?ts_ph_list_0, ?ts_ph_nat_1)) == qlength(?ts_ph_list_1, qlength(?ts_ph_list_0, ?ts_ph_nat_1)))
forall ?ts_ph_list_1: list, ?ts_ph_list_0: list, ?ts_ph_nat_1: nat :: (qlength(?ts_ph_list_1, qlength(?ts_ph_list_0, ?ts_ph_nat_1)) == qlength(?ts_ph_list_1, nlength(?ts_ph_list_0, ?ts_ph_nat_1)))
forall ?ts_ph_list_1: list, ?ts_ph_list_0: list, ?ts_ph_nat_0: nat :: (nlength(?ts_ph_list_1, qlength(?ts_ph_list_0, ?ts_ph_nat_0)) == nlength(?ts_ph_list_1, nlength(?ts_ph_list_0, ?ts_ph_nat_0)))
forall ?ts_ph_list_1: list, ?ts_ph_list_0: list, ?ts_ph_nat_0: nat :: (nlength(?ts_ph_list_1, nlength(?ts_ph_list_0, ?ts_ph_nat_0)) == nlength(?ts_ph_list_1, qlength(?ts_ph_list_0, ?ts_ph_nat_0)))
forall ?ts_ph_list_0: list, ?ts_ph_list_1: list, ?ts_ph_nat_0: nat :: (qlength(?ts_ph_list_0, nlength(?ts_ph_list_1, ?ts_ph_nat_0)) == nlength(?ts_ph_list_0, nlength(?ts_ph_list_1, ?ts_ph_nat_0)))
forall ?ts_ph_list_0: list, ?ts_ph_list_1: list, ?ts_ph_nat_0: nat :: (nlength(?ts_ph_list_0, nlength(?ts_ph_list_1, ?ts_ph_nat_0)) == qlength(?ts_ph_list_0, nlength(?ts_ph_list_1, ?ts_ph_nat_0)))
forall ?ts_ph_list_0: list, ?ts_ph_list_1: list :: (qlength(?ts_ph_list_0, length(?ts_ph_list_1)) == qlength(?ts_ph_list_1, length(?ts_ph_list_0)))
forall ?ts_ph_list_1: list, ?ts_ph_list_0: list :: (qlength(?ts_ph_list_1, length(?ts_ph_list_0)) == qlength(?ts_ph_list_0, length(?ts_ph_list_1)))
forall ?ts_ph_list_1: list, ?ts_ph_list_0: list, ?ts_ph_nat_1: nat :: (qlength(?ts_ph_list_1, qlength(?ts_ph_list_0, ?ts_ph_nat_1)) == qlength(?ts_ph_list_0, qlength(?ts_ph_list_1, ?ts_ph_nat_1)))
forall ?ts_ph_list_0: list, ?ts_ph_list_1: list, ?ts_ph_nat_1: nat :: (qlength(?ts_ph_list_0, qlength(?ts_ph_list_1, ?ts_ph_nat_1)) == qlength(?ts_ph_list_1, qlength(?ts_ph_list_0, ?ts_ph_nat_1)))
  5  reduced greedily
forall ?ts_ph_list_0: list :: (length(?ts_ph_list_0) == nlength(?ts_ph_list_0, zero))
forall ?ts_ph_list_0: list :: (nlength(?ts_ph_list_0, zero) == length(?ts_ph_list_0))
forall ?ts_ph_list_0: list, ?ts_ph_nat_1: nat :: (succ(nlength(?ts_ph_list_0, ?ts_ph_nat_1)) == nlength(?ts_ph_list_0, succ(?ts_ph_nat_1)))
forall ?ts_ph_list_0: list, ?ts_ph_nat_1: nat :: (nlength(?ts_ph_list_0, succ(?ts_ph_nat_1)) == succ(nlength(?ts_ph_list_0, ?ts_ph_nat_1)))
forall ?ts_ph_list_0: list, ?ts_ph_nat_1: nat :: (qlength(?ts_ph_list_0, succ(?ts_ph_nat_1)) == nlength(?ts_ph_list_0, succ(?ts_ph_nat_1)))
forall ?ts_ph_list_0: list, ?ts_ph_nat_1: nat :: (nlength(?ts_ph_list_0, succ(?ts_ph_nat_1)) == qlength(?ts_ph_list_0, succ(?ts_ph_nat_1)))
forall ?ts_ph_list_0: list, ?ts_ph_list_1: list :: (qlength(?ts_ph_list_0, length(?ts_ph_list_1)) == nlength(?ts_ph_list_0, length(?ts_ph_list_1)))
forall ?ts_ph_list_0: list, ?ts_ph_list_1: list :: (nlength(?ts_ph_list_0, length(?ts_ph_list_1)) == qlength(?ts_ph_list_0, length(?ts_ph_list_1)))
forall ?ts_ph_list_0: list, ?ts_ph_nat_0: nat :: (succ(qlength(?ts_ph_list_0, ?ts_ph_nat_0)) == succ(nlength(?ts_ph_list_0, ?ts_ph_nat_0)))
forall ?ts_ph_list_0: list, ?ts_ph_nat_0: nat :: (succ(nlength(?ts_ph_list_0, ?ts_ph_nat_0)) == succ(qlength(?ts_ph_list_0, ?ts_ph_nat_0)))
forall ?ts_ph_list_0: list, ?ts_ph_nat_1: nat, ?ts_ph_list_1: list :: (cons(nlength(?ts_ph_list_0, ?ts_ph_nat_1), ?ts_ph_list_1) == cons(qlength(?ts_ph_list_0, ?ts_ph_nat_1), ?ts_ph_list_1))
forall ?ts_ph_list_0: list, ?ts_ph_nat_1: nat, ?ts_ph_list_1: list :: (cons(qlength(?ts_ph_list_0, ?ts_ph_nat_1), ?ts_ph_list_1) == cons(nlength(?ts_ph_list_0, ?ts_ph_nat_1), ?ts_ph_list_1))
forall ?ts_ph_list_1: list, ?ts_ph_list_0: list, ?ts_ph_nat_1: nat :: (qlength(?ts_ph_list_1, nlength(?ts_ph_list_0, ?ts_ph_nat_1)) == qlength(?ts_ph_list_1, qlength(?ts_ph_list_0, ?ts_ph_nat_1)))
forall ?ts_ph_list_1: list, ?ts_ph_list_0: list, ?ts_ph_nat_1: nat :: (qlength(?ts_ph_list_1, qlength(?ts_ph_list_0, ?ts_ph_nat_1)) == qlength(?ts_ph_list_1, nlength(?ts_ph_list_0, ?ts_ph_nat_1)))
forall ?ts_ph_list_1: list, ?ts_ph_list_0: list, ?ts_ph_nat_0: nat :: (nlength(?ts_ph_list_1, qlength(?ts_ph_list_0, ?ts_ph_nat_0)) == nlength(?ts_ph_list_1, nlength(?ts_ph_list_0, ?ts_ph_nat_0)))
forall ?ts_ph_list_1: list, ?ts_ph_list_0: list, ?ts_ph_nat_0: nat :: (nlength(?ts_ph_list_1, nlength(?ts_ph_list_0, ?ts_ph_nat_0)) == nlength(?ts_ph_list_1, qlength(?ts_ph_list_0, ?ts_ph_nat_0)))
forall ?ts_ph_list_0: list, ?ts_ph_list_1: list, ?ts_ph_nat_0: nat :: (qlength(?ts_ph_list_0, nlength(?ts_ph_list_1, ?ts_ph_nat_0)) == nlength(?ts_ph_list_0, nlength(?ts_ph_list_1, ?ts_ph_nat_0)))
forall ?ts_ph_list_0: list, ?ts_ph_list_1: list, ?ts_ph_nat_0: nat :: (nlength(?ts_ph_list_0, nlength(?ts_ph_list_1, ?ts_ph_nat_0)) == qlength(?ts_ph_list_0, nlength(?ts_ph_list_1, ?ts_ph_nat_0)))
forall ?ts_ph_list_0: list, ?ts_ph_list_1: list :: (qlength(?ts_ph_list_0, length(?ts_ph_list_1)) == qlength(?ts_ph_list_1, length(?ts_ph_list_0)))
forall ?ts_ph_list_1: list, ?ts_ph_list_0: list :: (qlength(?ts_ph_list_1, length(?ts_ph_list_0)) == qlength(?ts_ph_list_0, length(?ts_ph_list_1)))
forall ?ts_ph_list_1: list, ?ts_ph_list_0: list, ?ts_ph_nat_1: nat :: (qlength(?ts_ph_list_1, qlength(?ts_ph_list_0, ?ts_ph_nat_1)) == qlength(?ts_ph_list_0, qlength(?ts_ph_list_1, ?ts_ph_nat_1)))
forall ?ts_ph_list_0: list, ?ts_ph_list_1: list, ?ts_ph_nat_1: nat :: (qlength(?ts_ph_list_0, qlength(?ts_ph_list_1, ?ts_ph_nat_1)) == qlength(?ts_ph_list_1, qlength(?ts_ph_list_0, ?ts_ph_nat_1)))
  20  evaluation/lemmas/list/length.structural.bpl
forall ?ts_ph_list_0: list :: (length(?ts_ph_list_0) == nlength(?ts_ph_list_0, zero))
forall ?ts_ph_list_0: list :: (nlength(?ts_ph_list_0, zero) == length(?ts_ph_list_0))
forall ?ts_ph_list_0: list, ?ts_ph_nat_1: nat :: (succ(nlength(?ts_ph_list_0, ?ts_ph_nat_1)) == nlength(?ts_ph_list_0, succ(?ts_ph_nat_1)))
forall ?ts_ph_list_0: list, ?ts_ph_nat_1: nat :: (nlength(?ts_ph_list_0, succ(?ts_ph_nat_1)) == succ(nlength(?ts_ph_list_0, ?ts_ph_nat_1)))
forall ?ts_ph_list_0: list, ?ts_ph_nat_1: nat :: (qlength(?ts_ph_list_0, succ(?ts_ph_nat_1)) == nlength(?ts_ph_list_0, succ(?ts_ph_nat_1)))
forall ?ts_ph_list_0: list, ?ts_ph_nat_1: nat :: (nlength(?ts_ph_list_0, succ(?ts_ph_nat_1)) == qlength(?ts_ph_list_0, succ(?ts_ph_nat_1)))
forall ?ts_ph_list_0: list, ?ts_ph_list_1: list :: (qlength(?ts_ph_list_0, length(?ts_ph_list_1)) == nlength(?ts_ph_list_0, length(?ts_ph_list_1)))
forall ?ts_ph_list_0: list, ?ts_ph_list_1: list :: (nlength(?ts_ph_list_0, length(?ts_ph_list_1)) == qlength(?ts_ph_list_0, length(?ts_ph_list_1)))
forall ?ts_ph_list_0: list, ?ts_ph_nat_0: nat :: (succ(qlength(?ts_ph_list_0, ?ts_ph_nat_0)) == succ(nlength(?ts_ph_list_0, ?ts_ph_nat_0)))
forall ?ts_ph_list_0: list, ?ts_ph_nat_0: nat :: (succ(nlength(?ts_ph_list_0, ?ts_ph_nat_0)) == succ(qlength(?ts_ph_list_0, ?ts_ph_nat_0)))
forall ?ts_ph_list_0: list, ?ts_ph_nat_1: nat, ?ts_ph_list_1: list :: (cons(nlength(?ts_ph_list_0, ?ts_ph_nat_1), ?ts_ph_list_1) == cons(qlength(?ts_ph_list_0, ?ts_ph_nat_1), ?ts_ph_list_1))
forall ?ts_ph_list_0: list, ?ts_ph_nat_1: nat, ?ts_ph_list_1: list :: (cons(qlength(?ts_ph_list_0, ?ts_ph_nat_1), ?ts_ph_list_1) == cons(nlength(?ts_ph_list_0, ?ts_ph_nat_1), ?ts_ph_list_1))
forall ?ts_ph_list_1: list, ?ts_ph_list_0: list, ?ts_ph_nat_1: nat :: (qlength(?ts_ph_list_1, nlength(?ts_ph_list_0, ?ts_ph_nat_1)) == qlength(?ts_ph_list_1, qlength(?ts_ph_list_0, ?ts_ph_nat_1)))
forall ?ts_ph_list_1: list, ?ts_ph_list_0: list, ?ts_ph_nat_1: nat :: (qlength(?ts_ph_list_1, qlength(?ts_ph_list_0, ?ts_ph_nat_1)) == qlength(?ts_ph_list_1, nlength(?ts_ph_list_0, ?ts_ph_nat_1)))
forall ?ts_ph_list_1: list, ?ts_ph_list_0: list, ?ts_ph_nat_0: nat :: (nlength(?ts_ph_list_1, qlength(?ts_ph_list_0, ?ts_ph_nat_0)) == nlength(?ts_ph_list_1, nlength(?ts_ph_list_0, ?ts_ph_nat_0)))
forall ?ts_ph_list_1: list, ?ts_ph_list_0: list, ?ts_ph_nat_0: nat :: (nlength(?ts_ph_list_1, nlength(?ts_ph_list_0, ?ts_ph_nat_0)) == nlength(?ts_ph_list_1, qlength(?ts_ph_list_0, ?ts_ph_nat_0)))
forall ?ts_ph_list_0: list, ?ts_ph_list_1: list, ?ts_ph_nat_0: nat :: (qlength(?ts_ph_list_0, nlength(?ts_ph_list_1, ?ts_ph_nat_0)) == nlength(?ts_ph_list_0, nlength(?ts_ph_list_1, ?ts_ph_nat_0)))
forall ?ts_ph_list_0: list, ?ts_ph_list_1: list, ?ts_ph_nat_0: nat :: (nlength(?ts_ph_list_0, nlength(?ts_ph_list_1, ?ts_ph_nat_0)) == qlength(?ts_ph_list_0, nlength(?ts_ph_list_1, ?ts_ph_nat_0)))
forall ?ts_ph_list_0: list, ?ts_ph_list_1: list :: (qlength(?ts_ph_list_0, length(?ts_ph_list_1)) == qlength(?ts_ph_list_1, length(?ts_ph_list_0)))
forall ?ts_ph_list_1: list, ?ts_ph_list_0: list :: (qlength(?ts_ph_list_1, length(?ts_ph_list_0)) == qlength(?ts_ph_list_0, length(?ts_ph_list_1)))
forall ?ts_ph_list_1: list, ?ts_ph_list_0: list, ?ts_ph_nat_1: nat :: (qlength(?ts_ph_list_1, qlength(?ts_ph_list_0, ?ts_ph_nat_1)) == qlength(?ts_ph_list_0, qlength(?ts_ph_list_1, ?ts_ph_nat_1)))
forall ?ts_ph_list_0: list, ?ts_ph_list_1: list, ?ts_ph_nat_1: nat :: (qlength(?ts_ph_list_0, qlength(?ts_ph_list_1, ?ts_ph_nat_1)) == qlength(?ts_ph_list_1, qlength(?ts_ph_list_0, ?ts_ph_nat_1)))
  20  evaluation/lemmas/list/length.conditional.bpl
forall ?ts_ph_list_0: list :: (length(?ts_ph_list_0) == nlength(?ts_ph_list_0, zero))
forall ?ts_ph_list_0: list :: (nlength(?ts_ph_list_0, zero) == length(?ts_ph_list_0))
forall ?ts_ph_list_0: list, ?ts_ph_nat_1: nat :: (succ(nlength(?ts_ph_list_0, ?ts_ph_nat_1)) == nlength(?ts_ph_list_0, succ(?ts_ph_nat_1)))
forall ?ts_ph_list_0: list, ?ts_ph_nat_1: nat :: (nlength(?ts_ph_list_0, succ(?ts_ph_nat_1)) == succ(nlength(?ts_ph_list_0, ?ts_ph_nat_1)))
forall ?ts_ph_list_0: list, ?ts_ph_nat_1: nat :: (qlength(?ts_ph_list_0, succ(?ts_ph_nat_1)) == nlength(?ts_ph_list_0, succ(?ts_ph_nat_1)))
forall ?ts_ph_list_0: list, ?ts_ph_nat_1: nat :: (nlength(?ts_ph_list_0, succ(?ts_ph_nat_1)) == qlength(?ts_ph_list_0, succ(?ts_ph_nat_1)))
forall ?ts_ph_list_0: list, ?ts_ph_list_1: list :: (qlength(?ts_ph_list_0, length(?ts_ph_list_1)) == nlength(?ts_ph_list_0, length(?ts_ph_list_1)))
forall ?ts_ph_list_0: list, ?ts_ph_list_1: list :: (nlength(?ts_ph_list_0, length(?ts_ph_list_1)) == qlength(?ts_ph_list_0, length(?ts_ph_list_1)))
forall ?ts_ph_list_0: list, ?ts_ph_nat_0: nat :: (succ(qlength(?ts_ph_list_0, ?ts_ph_nat_0)) == succ(nlength(?ts_ph_list_0, ?ts_ph_nat_0)))
forall ?ts_ph_list_0: list, ?ts_ph_nat_0: nat :: (succ(nlength(?ts_ph_list_0, ?ts_ph_nat_0)) == succ(qlength(?ts_ph_list_0, ?ts_ph_nat_0)))
forall ?ts_ph_list_0: list, ?ts_ph_nat_1: nat, ?ts_ph_list_1: list :: (cons(nlength(?ts_ph_list_0, ?ts_ph_nat_1), ?ts_ph_list_1) == cons(qlength(?ts_ph_list_0, ?ts_ph_nat_1), ?ts_ph_list_1))
forall ?ts_ph_list_0: list, ?ts_ph_nat_1: nat, ?ts_ph_list_1: list :: (cons(qlength(?ts_ph_list_0, ?ts_ph_nat_1), ?ts_ph_list_1) == cons(nlength(?ts_ph_list_0, ?ts_ph_nat_1), ?ts_ph_list_1))
forall ?ts_ph_list_1: list, ?ts_ph_list_0: list, ?ts_ph_nat_1: nat :: (qlength(?ts_ph_list_1, nlength(?ts_ph_list_0, ?ts_ph_nat_1)) == qlength(?ts_ph_list_1, qlength(?ts_ph_list_0, ?ts_ph_nat_1)))
forall ?ts_ph_list_1: list, ?ts_ph_list_0: list, ?ts_ph_nat_1: nat :: (qlength(?ts_ph_list_1, qlength(?ts_ph_list_0, ?ts_ph_nat_1)) == qlength(?ts_ph_list_1, nlength(?ts_ph_list_0, ?ts_ph_nat_1)))
forall ?ts_ph_list_1: list, ?ts_ph_list_0: list, ?ts_ph_nat_0: nat :: (nlength(?ts_ph_list_1, qlength(?ts_ph_list_0, ?ts_ph_nat_0)) == nlength(?ts_ph_list_1, nlength(?ts_ph_list_0, ?ts_ph_nat_0)))
forall ?ts_ph_list_1: list, ?ts_ph_list_0: list, ?ts_ph_nat_0: nat :: (nlength(?ts_ph_list_1, nlength(?ts_ph_list_0, ?ts_ph_nat_0)) == nlength(?ts_ph_list_1, qlength(?ts_ph_list_0, ?ts_ph_nat_0)))
forall ?ts_ph_list_0: list, ?ts_ph_list_1: list, ?ts_ph_nat_0: nat :: (qlength(?ts_ph_list_0, nlength(?ts_ph_list_1, ?ts_ph_nat_0)) == nlength(?ts_ph_list_0, nlength(?ts_ph_list_1, ?ts_ph_nat_0)))
forall ?ts_ph_list_0: list, ?ts_ph_list_1: list, ?ts_ph_nat_0: nat :: (nlength(?ts_ph_list_0, nlength(?ts_ph_list_1, ?ts_ph_nat_0)) == qlength(?ts_ph_list_0, nlength(?ts_ph_list_1, ?ts_ph_nat_0)))
forall ?ts_ph_list_0: list, ?ts_ph_list_1: list :: (qlength(?ts_ph_list_0, length(?ts_ph_list_1)) == qlength(?ts_ph_list_1, length(?ts_ph_list_0)))
forall ?ts_ph_list_1: list, ?ts_ph_list_0: list :: (qlength(?ts_ph_list_1, length(?ts_ph_list_0)) == qlength(?ts_ph_list_0, length(?ts_ph_list_1)))
forall ?ts_ph_list_1: list, ?ts_ph_list_0: list, ?ts_ph_nat_1: nat :: (qlength(?ts_ph_list_1, qlength(?ts_ph_list_0, ?ts_ph_nat_1)) == qlength(?ts_ph_list_0, qlength(?ts_ph_list_1, ?ts_ph_nat_1)))
forall ?ts_ph_list_0: list, ?ts_ph_list_1: list, ?ts_ph_nat_1: nat :: (qlength(?ts_ph_list_0, qlength(?ts_ph_list_1, ?ts_ph_nat_1)) == qlength(?ts_ph_list_1, qlength(?ts_ph_list_0, ?ts_ph_nat_1)))
  0  evaluation/lemmas/list/length.enumerate.bpl
